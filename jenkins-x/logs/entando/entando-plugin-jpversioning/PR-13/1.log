
Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-credential-initializer-zx6j7[0m
{"level":"warn","ts":1607633832.7193658,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1607633832.723662,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-working-dir-initializer-gzkbf[0m
{"level":"warn","ts":1607633834.7732651,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1607633834.7807076,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully e**cuted command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-place-tools[0m

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-source-entando-entando-plugin-jpversio-rdxrg[0m
{"level":"warn","ts":1607633921.60433,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/0.8.0-**-support-backwards-incompats\" is not a valid GitHub commit ID"}
{"level":"info","ts":1607633923.3475544,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/entando/entando-plugin-jpversioning.git @ master in path /workspace/source"}

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:faee9df483eb18d60b77d2cd4b2722ea0ee720ef,13:4b612982e2e6b2fe7a7ce316de63cf3b17841aaf
DEBUG: ran git fetch --unshallow origin 4b612982e2e6b2fe7a7ce316de63cf3b17841aaf: faee9df483eb18d60b77d2cd4b2722ea0ee720ef: in 
DEBUG: ran git checkout master in 
DEBUG: ran git reset --hard faee9df483eb18d60b77d2cd4b2722ea0ee720ef in 
DEBUG: ran clean --force -d . in 
DEBUG: ran git merge 4b612982e2e6b2fe7a7ce316de63cf3b17841aaf in 
Merged SHA 4b612982e2e6b2fe7a7ce316de63cf3b17841aaf with commit message 'BOM_UPDATE-2020-12-10_21-46-11' into base branch master

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-set-version[0m
Picked up _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx8000m
[INFO] Scanning for projects...
[INFO] 
[INFO] ------< org.entando.entando.plugins:entando-plugin-jpversioning >-------
[INFO] Building Entando Plugin: Content Versioning 6.3.0-SNAPSHOT
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- versions-maven-plugin:2.8.1:set (default-cli) @ entando-plugin-jpversioning ---
[INFO] Local aggregation ****: /workspace/source
[INFO] Processing change of org.entando.entando.plugins:entando-plugin-jpversioning:6.3.0-SNAPSHOT -> 0.0.0-SNAPSHOT-PR-13-1
[INFO] Processing org.entando.entando.plugins:entando-plugin-jpversioning
[INFO]     Updating project org.entando.entando.plugins:entando-plugin-jpversioning
[INFO]         from version 6.3.0-SNAPSHOT to 0.0.0-SNAPSHOT-PR-13-1
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  12.913 s
[INFO] Finished at: 2020-12-10T20:59:02Z
[INFO] ------------------------------------------------------------------------

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-fix-git-for-sonar[0m
M	pom.xml
Switched to a new branch 'PR-13'
Deleted branch master (was 4b61298).
From https://github.com/entando/entando-plugin-jpversioning
 * [new branch]      master            -> master
 * [new tag]         5.0.0.initial     -> 5.0.0.initial
 * [new tag]         pia-crs4          -> pia-crs4
 * [new tag]         v4.2.0            -> v4.2.0
 * [new tag]         v4.3.2-RC1        -> v4.3.2-RC1
 * [new tag]         v5.0.0-pre        -> v5.0.0-pre
 * [new tag]         v6.2.0-sprint1-rc -> v6.2.0-sprint1-rc
 * [new tag]         v6.2.0-sprint2-rc -> v6.2.0-sprint2-rc
 * [new tag]         v6.2.0-sprint3-rc -> v6.2.0-sprint3-rc
 * [new tag]         v6.2.0-sprint4-rc -> v6.2.0-sprint4-rc
 * [new tag]         v6.2.0-sprint5-rc -> v6.2.0-sprint5-rc

Showing logs for build [32mentando-entando-plugin-jpversio-mgqr4-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-mvn-verify-pr[0m
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
{
  "url": "https://api.github.com/repos/entando/entando-plugin-jpversioning/statuses/4b612982e2e6b2fe7a7ce316de63cf3b17841aaf",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 11602702270,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMTYwMjcwMjI3MA==",
  "state": "pending",
  "description": "Pre-deployment tests pending!",
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11  1866    0     0  100   219      0    222 --:--:-- --:--:-- --:--:--   223100  1866  100  1647  100   219   1673    222 --:--:-- --:--:-- --:--:--  1682
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  "target_url": "https://entando-k8s.github.io/devops-results/entando-plugin-jpversioning/PR-13/surefire-report.html",
  "context": "Pre-deployment tests",
  "created_at": "2020-12-10T20:59:06Z",
  "updated_at": "2020-12-10T20:59:06Z",
  "creator": {
    "login": "**********",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/entando-**",
    "html_url": "https://github.com/**********",
    "followers_url": "https://api.github.com/users/**********/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/**********/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/**********/subscriptions",
    "organizations_url": "https://api.github.com/users/**********/orgs",
    "repos_url": "https://api.github.com/users/**********/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/**********/received_events",
    "type": "User",
    "site_*****": *****
  }
}
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  1838  100  1633  100   205   2540    318 --:--:-- --:--:-- --:--:--  2555
{
  "url": "https://api.github.com/repos/entando/entando-plugin-jpversioning/statuses/4b612982e2e6b2fe7a7ce316de63cf3b17841aaf",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 11602702407,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMTYwMjcwMjQwNw==",
  "state": "pending",
  "description": "OWASP CVE pending!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-plugin-jpversioning/PR-13/dependency-check-report.html",
  "context": "OWASP CVE",
  "created_at": "2020-12-10T20:59:07Z",
  "updated_at": "2020-12-10T20:59:07Z",
  "creator": {
    "login": "**********",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/**********",
    "html_url": "https://github.com/**********",
    "followers_url": "https://api.github.com/users/**********/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/**********/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/**********/subscriptions",
    "organizations_url": "https://api.github.com/users/**********/orgs",
    "repos_url": "https://api.github.com/users/**********/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/**********/received_events",
    "type": "User",
    "site_*****": *****
  }
}
Picked up _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx8000m
[INFO] Scanning for projects...
[INFO] 
[INFO] ------< org.entando.entando.plugins:entando-plugin-jpversioning >-------
[INFO] Building Entando Plugin: Content Versioning 0.0.0-SNAPSHOT-PR-13-1
[INFO] --------------------------------[ war ]---------------------------------
[WARNING] The POM for com.sun.xml.bind:jaxb-impl:jar:2.2.11 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.1:check (validate) @ entando-plugin-jpversioning ---
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.1:checkstyle (validate) @ entando-plugin-jpversioning ---
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:prepare-agent (prepare-agent) @ entando-plugin-jpversioning ---
[INFO] argLine set to -javaagent:/home/jenkins/.mvnrepository/org/jacoco/org.jacoco.agent/0.8.5/org.jacoco.agent-0.8.5-runtime.jar=destfile=/workspace/source/target/jacoco.e**c
[INFO] 
[INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ entando-plugin-jpversioning ---
[debug] e**cute contextualize
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 11 resources
[INFO] Copying 1 resource
[INFO] Copying 16 resources
[INFO] Copying 9 resources
[INFO] Copying 0 resource to META-INF
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ entando-plugin-jpversioning ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 36 source files to /workspace/source/target/classes
[WARNING] /workspace/source/src/main/java/org/entando/entando/plugins/jpversioning/web/resource/ResourceVersioningController.java:[79,16] unchecked call to ResponseEntity(T,org.springframework.util.MultiValueMap<java.lang.String,java.lang.String>,org.springframework.http.HttpStatus) as a member of the raw type org.springframework.http.ResponseEntity
[WARNING] /workspace/source/src/main/java/org/entando/entando/plugins/jpversioning/services/resource/ResourcesVersioningService.java:[289,25] unchecked method invocation: method sort in class java.util.Collections is applied to given types
  required: java.util.List<T>,java.util.Comparator<? super T>
  found: java.util.List<com.agiletec.plugins.jacms.aps.******.services.resource.model.ImageResourceDimension>,org.apache.commons.beanutils.BeanComparator
[WARNING] /workspace/source/src/main/java/org/entando/entando/plugins/jpversioning/services/resource/ResourcesVersioningService.java:[289,38] unchecked conversion
  required: java.util.Comparator<? super T>
  found:    org.apache.commons.beanutils.BeanComparator
[INFO] /workspace/source/src/main/java/com/agiletec/plugins/jpversioning/aps*****/versioning/VersionAction.java: Some input files use or override a deprecated API.
[INFO] /workspace/source/src/main/java/com/agiletec/plugins/jpversioning/aps*****/versioning/VersionAction.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.5:copy-resources (copy-resources-test) @ entando-plugin-jpversioning ---
[debug] e**cute contextualize
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 6 resources
[INFO] 
[INFO] --- maven-resources-plugin:2.5:copy-resources (copy-resources-file-test-) @ entando-plugin-jpversioning ---
[debug] e**cute contextualize
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 6 resources
[INFO] 
[INFO] --- maven-resources-plugin:2.5:testResources (default-testResources) @ entando-plugin-jpversioning ---
[debug] e**cute contextualize
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 4 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ entando-plugin-jpversioning ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 21 source files to /workspace/source/target/test-classes
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[80,37] unchecked conversion
  required: java.util.List<java.lang.Long>
  found:    java.util.ArrayList
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[99,56] unchecked method invocation: method thenReturn in interface org.mockito.stubbing.OngoingStubbing is applied to given types
  required: T
  found: org.entando.entando.aps.******.services.DtoBuilder
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[99,57] unchecked conversion
  required: T
  found:    org.entando.entando.aps.******.services.DtoBuilder
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[100,32] unchecked call to convert(I) as a member of the raw type org.entando.entando.aps.******.services.DtoBuilder
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[127,56] unchecked method invocation: method thenReturn in interface org.mockito.stubbing.OngoingStubbing is applied to given types
  required: T
  found: org.entando.entando.aps.******.services.DtoBuilder
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[127,57] unchecked conversion
  required: T
  found:    org.entando.entando.aps.******.services.DtoBuilder
[WARNING] /workspace/source/src/test/java/org/entando/entando/jpversioning/services/content/ContentVersioningServiceTest.java:[128,32] unchecked call to convert(I) as a member of the raw type org.entando.entando.aps.******.services.DtoBuilder
[INFO] /workspace/source/src/test/java/com/agiletec/plugins/jpversioning/aps/******/services/resource/TestTrashedResourceManager.java: Some input files use or override a deprecated API.
[INFO] /workspace/source/src/test/java/com/agiletec/plugins/jpversioning/aps/******/services/resource/TestTrashedResourceManager.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M4:test (default-test) @ entando-plugin-jpversioning ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
Test for org.entando.entando.jpversioning
Test for jpversioning
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/jenkins/.mvnrepository/org/slf4j/slf4j-jdk14/1.7.26/slf4j-jdk14-1.7.26.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/jenkins/.mvnrepository/org/apache/logging/log4j/log4j-slf4j-impl/2.13.3/log4j-slf4j-impl-2.13.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.JDK14LoggerFactory]
Dec 10, 2020 8:59:55 PM org.springframework.test.context.support.AbstractTestContextBootstrapper getDefaultTestE**cutionListenerClassNames
INFO: Loaded default TestE**cutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestE**cutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestE**cutionListener, org.springframework.test.context.support.DependencyInjectionTestE**cutionListener, org.springframework.test.context.support.DirtiesContextTestE**cutionListener, org.springframework.test.context.transaction.TransactionalTestE**cutionListener, org.springframework.test.context.jdbc.SqlScriptsTestE**cutionListener]

Dec 10, 2020 8:59:55 PM org.springframework.test.context.support.AbstractTestContextBootstrapper getTestE**cutionListeners
INFO: Using TestE**cutionListeners: [org.springframework.test.context.web.ServletTestE**cutionListener@45ab3bdd, org.springframework.test.context.support.DirtiesContextBeforeModesTestE**cutionListener@2f10f633, org.springframework.test.context.support.DependencyInjectionTestE**cutionListener@1642eeae, org.springframework.test.context.support.DirtiesContextTestE**cutionListener@3440e9cd, org.springframework.test.context.transaction.TransactionalTestE**cutionListener@28a9494b, org.springframework.test.context.jdbc.SqlScriptsTestE**cutionListener@a09303]

Dec 10, 2020 8:59:55 PM org.springframework.test.context.support.AbstractTestContextBootstrapper getDefaultTestE**cutionListenerClassNames
INFO: Loaded default TestE**cutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestE**cutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestE**cutionListener, org.springframework.test.context.support.DependencyInjectionTestE**cutionListener, org.springframework.test.context.support.DirtiesContextTestE**cutionListener, org.springframework.test.context.transaction.TransactionalTestE**cutionListener, org.springframework.test.context.jdbc.SqlScriptsTestE**cutionListener]

Dec 10, 2020 8:59:55 PM org.springframework.test.context.support.AbstractTestContextBootstrapper getTestE**cutionListeners
INFO: Using TestE**cutionListeners: [org.springframework.test.context.web.ServletTestE**cutionListener@40709f9, org.springframework.test.context.support.DirtiesContextBeforeModesTestE**cutionListener@6b1b19cf, org.springframework.test.context.support.DependencyInjectionTestE**cutionListener@6393bf8b, org.springframework.test.context.support.DirtiesContextTestE**cutionListener@76d7881e, org.springframework.test.context.transaction.TransactionalTestE**cutionListener@4aa31ffc, org.springframework.test.context.jdbc.SqlScriptsTestE**cutionListener@7945b206]

Dec 10, 2020 8:59:55 PM org.springframework.test.context.support.AbstractTestContextBootstrapper getDefaultTestE**cutionListenerClassNames
INFO: Loaded default TestE**cutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestE**cutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestE**cutionListener, org.springframework.test.context.support.DependencyInjectionTestE**cutionListener, org.springframework.test.context.support.DirtiesContextTestE**cutionListener, org.springframework.test.context.transaction.TransactionalTestE**cutionListener, org.springframework.test.context.jdbc.SqlScriptsTestE**cutionListener]

Dec 10, 2020 8:59:55 PM org.springframework.test.context.support.AbstractTestContextBootstrapper getTestE**cutionListeners
INFO: Using TestE**cutionListeners: [org.springframework.test.context.web.ServletTestE**cutionListener@487cd177, org.springframework.test.context.support.DirtiesContextBeforeModesTestE**cutionListener@324b6a56, org.springframework.test.context.support.DependencyInjectionTestE**cutionListener@421d54b3, org.springframework.test.context.support.DirtiesContextTestE**cutionListener@63f40ca0, org.springframework.test.context.transaction.TransactionalTestE**cutionListener@4dad8ec0, org.springframework.test.context.jdbc.SqlScriptsTestE**cutionListener@24dd44f9]

[INFO] Running com.agiletec.plugins.jpversioning.aps.******.services.versioning.TestVersioningDAO
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder activate
INFO: Activating simple JNDI environment
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 8:59:55 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 8:59:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@3b4f1eb]
Dec 10, 2020 8:59:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@6247c08c]
Dec 10, 2020 8:59:56 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 8:59:56 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:00:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Report not availablejava.sql.SQLSyntaxErrorException: Schema 'AGILE' does not exist
Dec 10, 2020 9:00:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:00:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/sysconfig
Dec 10, 2020 9:00:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/categories
Dec 10, 2020 9:00:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/localstrings
Dec 10, 2020 9:00:15 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/pagemodels
Dec 10, 2020 9:00:15 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/pages
Dec 10, 2020 9:00:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/pages_metadata_online
Dec 10, 2020 9:00:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/pages_metadata_draft
Dec 10, 2020 9:00:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/widgetcatalog
Dec 10, 2020 9:00:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/guifragment
Dec 10, 2020 9:00:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/widgetconfig
Dec 10, 2020 9:00:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/widgetconfig_draft
Dec 10, 2020 9:00:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/uniquekeys
Dec 10, 2020 9:00:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/userpreferences
Dec 10, 2020 9:00:21 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authgroups
Dec 10, 2020 9:00:21 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authpermissions
Dec 10, 2020 9:00:21 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authroles
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authrolepermissions
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authusers
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authusergrouprole
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/api_oauth_consumers
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/api_oauth_tokens
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/apicatalog_methods
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/apicatalog_services
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authuserprofiles
Dec 10, 2020 9:00:22 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authuserprofilesearch
Dec 10, 2020 9:00:23 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authuserprofileattrroles
Dec 10, 2020 9:00:24 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/actionlogrecords
Dec 10, 2020 9:00:24 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/actionlogrelations
Dec 10, 2020 9:00:24 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/actionloglikerecords
Dec 10, 2020 9:00:24 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/actionlogcommentrecords
Dec 10, 2020 9:00:24 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/dataobjectmodels
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/dataobjects
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/dataobjectrelations
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/dataobjectsearch
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/dataobjectattributeroles
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/contentmodels
Dec 10, 2020 9:00:26 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/contents
Dec 10, 2020 9:00:27 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/resources
Dec 10, 2020 9:00:27 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/resourcerelations
Dec 10, 2020 9:00:27 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/contentrelations
Dec 10, 2020 9:00:27 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/contentsearch
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/contentattributeroles
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/workcontentrelations
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/workcontentsearch
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/workcontentattributeroles
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - servDataSource/authusershortcuts
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/jpversioning_versionedcontents
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Created table - portDataSource/jpversioning_trashedresources
Dec 10, 2020 9:00:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:00:31 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:00:34 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:00:34 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:00:34 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:00:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Successfully created a random page_preview_hash
Dec 10, 2020 9:00:53 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:00:56 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2a24c9ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@27f14a75, org.springframework.security.web.header.HeaderWriterFilter@656b7328, org.springframework.security.web.authentication.logout.LogoutFilter@397b936c, org.springframework.web.filter.CorsFilter@6b5a2c92, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@59130994, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a95ede7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76768fef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5304be1e, org.springframework.security.web.session.SessionManagementFilter@643995d, org.springframework.security.web.access.ExceptionTranslationFilter@37027401, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@213cf900]
Dec 10, 2020 9:00:56 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26a38029, org.springframework.security.web.context.SecurityContextPersistenceFilter@23d7aabe, org.springframework.security.web.header.HeaderWriterFilter@61ab6ff4, org.springframework.web.filter.CorsFilter@6b5a2c92, org.springframework.security.web.authentication.logout.LogoutFilter@38bf4fda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2985771a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@136b7911, org.springframework.security.web.session.SessionManagementFilter@a64337d, org.springframework.security.web.access.ExceptionTranslationFilter@3d16f9df]
Dec 10, 2020 9:00:56 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 59696 ms
Dec 10, 2020 9:00:56 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:07 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:08 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79ae921, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a33525b, org.springframework.security.web.header.HeaderWriterFilter@3ace97f6, org.springframework.security.web.authentication.logout.LogoutFilter@2bbc84, org.springframework.web.filter.CorsFilter@34a4ceb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f80f5ac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f44cb49, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26a294b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f2d743c, org.springframework.security.web.session.SessionManagementFilter@1f16786a, org.springframework.security.web.access.ExceptionTranslationFilter@71640af7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5cf91adf]
Dec 10, 2020 9:01:08 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@607a1114, org.springframework.security.web.context.SecurityContextPersistenceFilter@558077af, org.springframework.security.web.header.HeaderWriterFilter@393a64ed, org.springframework.web.filter.CorsFilter@34a4ceb, org.springframework.security.web.authentication.logout.LogoutFilter@36113576, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b7355bf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21845d30, org.springframework.security.web.session.SessionManagementFilter@272ae18, org.springframework.security.web.access.ExceptionTranslationFilter@d026de5]
Dec 10, 2020 9:01:09 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@5b2fe655]
Dec 10, 2020 9:01:09 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@fe7aa5c]
Dec 10, 2020 9:01:09 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:01:09 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:13 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:21 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:22 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3063bff1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4006d766, org.springframework.security.web.header.HeaderWriterFilter@1be2cafe, org.springframework.security.web.authentication.logout.LogoutFilter@49d6125b, org.springframework.web.filter.CorsFilter@4e256ca1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2be93d67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1618c0d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ad84e85, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5236f518, org.springframework.security.web.session.SessionManagementFilter@44cd50d2, org.springframework.security.web.access.ExceptionTranslationFilter@1d1c25c3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@20f6f35d]
Dec 10, 2020 9:01:22 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a8bcf44, org.springframework.security.web.context.SecurityContextPersistenceFilter@115a5b1f, org.springframework.security.web.header.HeaderWriterFilter@46d346ab, org.springframework.web.filter.CorsFilter@4e256ca1, org.springframework.security.web.authentication.logout.LogoutFilter@39cae9c1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7559cf26, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29633938, org.springframework.security.web.session.SessionManagementFilter@5598b429, org.springframework.security.web.access.ExceptionTranslationFilter@2328e9e3]
Dec 10, 2020 9:01:22 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 12958 ms
Dec 10, 2020 9:01:22 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:32 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:34 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@e3b5500, org.springframework.security.web.context.SecurityContextPersistenceFilter@8f09964, org.springframework.security.web.header.HeaderWriterFilter@110936ca, org.springframework.security.web.authentication.logout.LogoutFilter@680772c1, org.springframework.web.filter.CorsFilter@36ba88b1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@68de2864, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@236952df, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e713ab8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@508123f8, org.springframework.security.web.session.SessionManagementFilter@2cb64e15, org.springframework.security.web.access.ExceptionTranslationFilter@461115dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21435414]
Dec 10, 2020 9:01:34 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fa70c73, org.springframework.security.web.context.SecurityContextPersistenceFilter@16319987, org.springframework.security.web.header.HeaderWriterFilter@44ecd655, org.springframework.web.filter.CorsFilter@36ba88b1, org.springframework.security.web.authentication.logout.LogoutFilter@154052fd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@561d874a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74e1ada2, org.springframework.security.web.session.SessionManagementFilter@3ccbb162, org.springframework.security.web.access.ExceptionTranslationFilter@1d2bb8eb]
Dec 10, 2020 9:01:34 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@1e7dcd3]
Dec 10, 2020 9:01:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@7af07887]
Dec 10, 2020 9:01:34 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:01:34 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:45 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:47 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b8ecb79, org.springframework.security.web.context.SecurityContextPersistenceFilter@46c57af7, org.springframework.security.web.header.HeaderWriterFilter@2e3dd7c7, org.springframework.security.web.authentication.logout.LogoutFilter@1b970b44, org.springframework.web.filter.CorsFilter@3e65bb04, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@223efa0f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@347c0c7c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@643face6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42d48401, org.springframework.security.web.session.SessionManagementFilter@4235aa1c, org.springframework.security.web.access.ExceptionTranslationFilter@5b21cb0c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5231a4a8]
Dec 10, 2020 9:01:47 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71afac1b, org.springframework.security.web.context.SecurityContextPersistenceFilter@49a7ad94, org.springframework.security.web.header.HeaderWriterFilter@50a8a63f, org.springframework.web.filter.CorsFilter@3e65bb04, org.springframework.security.web.authentication.logout.LogoutFilter@5107a20, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29bebdb5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cb27fe3, org.springframework.security.web.session.SessionManagementFilter@12d569dc, org.springframework.security.web.access.ExceptionTranslationFilter@363ac875]
Dec 10, 2020 9:01:47 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 12614 ms
Dec 10, 2020 9:01:47 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:01:50 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:01:57 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:59 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3980482d, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f52864, org.springframework.security.web.header.HeaderWriterFilter@f16b1ef, org.springframework.security.web.authentication.logout.LogoutFilter@4edf1ae0, org.springframework.web.filter.CorsFilter@7c642043, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@76773182, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@275b652d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@331d3197, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41049831, org.springframework.security.web.session.SessionManagementFilter@6c3c4310, org.springframework.security.web.access.ExceptionTranslationFilter@4f1b3878, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e17cb57]
Dec 10, 2020 9:01:59 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b36de0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@78fc759, org.springframework.security.web.header.HeaderWriterFilter@4116dbc3, org.springframework.web.filter.CorsFilter@7c642043, org.springframework.security.web.authentication.logout.LogoutFilter@627a6817, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@137e98e6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64c19189, org.springframework.security.web.session.SessionManagementFilter@7f7f384e, org.springframework.security.web.access.ExceptionTranslationFilter@24360a64]
Dec 10, 2020 9:01:59 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@16d85b11]
Dec 10, 2020 9:01:59 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@6ebc615b]
Dec 10, 2020 9:01:59 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:01:59 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:11 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:12 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d55ff5a, org.springframework.security.web.context.SecurityContextPersistenceFilter@fb9f5e6, org.springframework.security.web.header.HeaderWriterFilter@52ab0b53, org.springframework.security.web.authentication.logout.LogoutFilter@76b3a0a9, org.springframework.web.filter.CorsFilter@2eb178ce, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@65d7cc44, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e539886, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26833e95, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5958c025, org.springframework.security.web.session.SessionManagementFilter@6f523755, org.springframework.security.web.access.ExceptionTranslationFilter@5f9a8590, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e648b7d]
Dec 10, 2020 9:02:12 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35bccb1b, org.springframework.security.web.context.SecurityContextPersistenceFilter@d13cbb4, org.springframework.security.web.header.HeaderWriterFilter@2f83ca16, org.springframework.web.filter.CorsFilter@2eb178ce, org.springframework.security.web.authentication.logout.LogoutFilter@26e1fa18, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@162394b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27c12f18, org.springframework.security.web.session.SessionManagementFilter@8212018, org.springframework.security.web.access.ExceptionTranslationFilter@30c57dc3]
Dec 10, 2020 9:02:12 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 13233 ms
Dec 10, 2020 9:02:12 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:24 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:25 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79f856df, org.springframework.security.web.context.SecurityContextPersistenceFilter@555e1020, org.springframework.security.web.header.HeaderWriterFilter@2a1fa5f5, org.springframework.security.web.authentication.logout.LogoutFilter@1a572149, org.springframework.web.filter.CorsFilter@2970b182, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@68af9f37, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43ba76d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64474cab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c694143, org.springframework.security.web.session.SessionManagementFilter@44cb36c1, org.springframework.security.web.access.ExceptionTranslationFilter@26e8daa8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2eb6272d]
Dec 10, 2020 9:02:25 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5659ea93, org.springframework.security.web.context.SecurityContextPersistenceFilter@6bdfba6f, org.springframework.security.web.header.HeaderWriterFilter@50505fdb, org.springframework.web.filter.CorsFilter@2970b182, org.springframework.security.web.authentication.logout.LogoutFilter@40433c36, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@562f6514, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d3568d, org.springframework.security.web.session.SessionManagementFilter@4260d68f, org.springframework.security.web.access.ExceptionTranslationFilter@1675770f]
Dec 10, 2020 9:02:26 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@56c95e67]
Dec 10, 2020 9:02:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@446c0091]
Dec 10, 2020 9:02:26 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:02:26 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:35 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:37 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@78a79029, org.springframework.security.web.context.SecurityContextPersistenceFilter@4274a311, org.springframework.security.web.header.HeaderWriterFilter@64e21421, org.springframework.security.web.authentication.logout.LogoutFilter@6a05ca59, org.springframework.web.filter.CorsFilter@2e8fe3ea, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5e1b7142, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@17c03da9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b9fedfa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78eab3ce, org.springframework.security.web.session.SessionManagementFilter@ed87069, org.springframework.security.web.access.ExceptionTranslationFilter@47b62c6d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50866615]
Dec 10, 2020 9:02:37 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15b2f669, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fe45c00, org.springframework.security.web.header.HeaderWriterFilter@153bad16, org.springframework.web.filter.CorsFilter@2e8fe3ea, org.springframework.security.web.authentication.logout.LogoutFilter@78dbb12e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67467a4e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fdd38ad, org.springframework.security.web.session.SessionManagementFilter@347c65b5, org.springframework.security.web.access.ExceptionTranslationFilter@38621d17]
Dec 10, 2020 9:02:37 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11308 ms
Dec 10, 2020 9:02:37 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:48 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:02:49 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38415d92, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e8882c0, org.springframework.security.web.header.HeaderWriterFilter@18957175, org.springframework.security.web.authentication.logout.LogoutFilter@55800eda, org.springframework.web.filter.CorsFilter@2cae766a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@54cad653, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@635a9fe2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64f6c5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ea5c980, org.springframework.security.web.session.SessionManagementFilter@27270b12, org.springframework.security.web.access.ExceptionTranslationFilter@3dc57b5a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6e3888cd]
Dec 10, 2020 9:02:49 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27b0922b, org.springframework.security.web.context.SecurityContextPersistenceFilter@9fbcb9a, org.springframework.security.web.header.HeaderWriterFilter@656fedcc, org.springframework.web.filter.CorsFilter@2cae766a, org.springframework.security.web.authentication.logout.LogoutFilter@704020a2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a37be69, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@502c2b6e, org.springframework.security.web.session.SessionManagementFilter@3247d14, org.springframework.security.web.access.ExceptionTranslationFilter@7516d327]
Dec 10, 2020 9:02:50 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 174.708 s - in com.agiletec.plugins.jpversioning.aps.******.services.versioning.TestVersioningDAO
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
[INFO] Running com.agiletec.plugins.jpversioning.aps.******.services.versioning.TestVersioningManager
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@32106ce4]
Dec 10, 2020 9:02:50 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@61356428]
Dec 10, 2020 9:02:50 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:02:50 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:02:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:00 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:01 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f4768b8, org.springframework.security.web.context.SecurityContextPersistenceFilter@66fe4708, org.springframework.security.web.header.HeaderWriterFilter@6692c3b3, org.springframework.security.web.authentication.logout.LogoutFilter@5c6c6c24, org.springframework.web.filter.CorsFilter@ab1b160, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@645c2517, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@257c65ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5887833f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a50a998, org.springframework.security.web.session.SessionManagementFilter@7fa05167, org.springframework.security.web.access.ExceptionTranslationFilter@14c59378, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4339800a]
Dec 10, 2020 9:03:01 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5168d84a, org.springframework.security.web.context.SecurityContextPersistenceFilter@287f1c5a, org.springframework.security.web.header.HeaderWriterFilter@39fa4e13, org.springframework.web.filter.CorsFilter@ab1b160, org.springframework.security.web.authentication.logout.LogoutFilter@12599f8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27f032cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c116af4, org.springframework.security.web.session.SessionManagementFilter@66a56b8d, org.springframework.security.web.access.ExceptionTranslationFilter@46992331]
Dec 10, 2020 9:03:01 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11506 ms
Dec 10, 2020 9:03:01 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:12 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:13 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52016d08, org.springframework.security.web.context.SecurityContextPersistenceFilter@599518d7, org.springframework.security.web.header.HeaderWriterFilter@355de28b, org.springframework.security.web.authentication.logout.LogoutFilter@40605fb5, org.springframework.web.filter.CorsFilter@432fc238, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@72549d70, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29c2b0c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52f19d3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23adb66a, org.springframework.security.web.session.SessionManagementFilter@32c94a24, org.springframework.security.web.access.ExceptionTranslationFilter@6b43eaa3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@53d07662]
Dec 10, 2020 9:03:13 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@314d8ec2, org.springframework.security.web.context.SecurityContextPersistenceFilter@63d6122e, org.springframework.security.web.header.HeaderWriterFilter@6bc20f2d, org.springframework.web.filter.CorsFilter@432fc238, org.springframework.security.web.authentication.logout.LogoutFilter@6259b7c5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@516e6f2c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2aaeb94b, org.springframework.security.web.session.SessionManagementFilter@a584cef, org.springframework.security.web.access.ExceptionTranslationFilter@2592f313]
Dec 10, 2020 9:03:13 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@24b043e9]
Dec 10, 2020 9:03:13 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@7931a19b]
Dec 10, 2020 9:03:13 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:03:13 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:23 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:25 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@306f1dcc, org.springframework.security.web.context.SecurityContextPersistenceFilter@fadaf3e, org.springframework.security.web.header.HeaderWriterFilter@3424e1f4, org.springframework.security.web.authentication.logout.LogoutFilter@890567d, org.springframework.web.filter.CorsFilter@7b48c576, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@69fdfe9a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@322af8e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@9afbddd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@32942564, org.springframework.security.web.session.SessionManagementFilter@60829f2b, org.springframework.security.web.access.ExceptionTranslationFilter@16ebb5b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1130550e]
Dec 10, 2020 9:03:25 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ff4ae0e, org.springframework.security.web.context.SecurityContextPersistenceFilter@6c57c0a7, org.springframework.security.web.header.HeaderWriterFilter@3bdb4b4e, org.springframework.web.filter.CorsFilter@7b48c576, org.springframework.security.web.authentication.logout.LogoutFilter@d7405ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b96e760, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a764267, org.springframework.security.web.session.SessionManagementFilter@7c5d7917, org.springframework.security.web.access.ExceptionTranslationFilter@28f7f431]
Dec 10, 2020 9:03:25 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11916 ms
Dec 10, 2020 9:03:25 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:36 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:37 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47b21d92, org.springframework.security.web.context.SecurityContextPersistenceFilter@26190323, org.springframework.security.web.header.HeaderWriterFilter@2b7abaf, org.springframework.security.web.authentication.logout.LogoutFilter@1db24697, org.springframework.web.filter.CorsFilter@1618a4a0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2f1fd2ca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bdd27ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e0a389d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@798568a, org.springframework.security.web.session.SessionManagementFilter@521e1940, org.springframework.security.web.access.ExceptionTranslationFilter@16958431, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1353e231]
Dec 10, 2020 9:03:37 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56ab2f1f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a5d0e4f, org.springframework.security.web.header.HeaderWriterFilter@7505c5e7, org.springframework.web.filter.CorsFilter@1618a4a0, org.springframework.security.web.authentication.logout.LogoutFilter@54867cb6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d2d7dab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66dcad14, org.springframework.security.web.session.SessionManagementFilter@24c2c55c, org.springframework.security.web.access.ExceptionTranslationFilter@306cf966]
Dec 10, 2020 9:03:38 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@25acc505]
Dec 10, 2020 9:03:39 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@51cc7169]
Dec 10, 2020 9:03:39 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:03:39 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:49 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:50 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@584d93ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@71d65fc2, org.springframework.security.web.header.HeaderWriterFilter@164e46b5, org.springframework.security.web.authentication.logout.LogoutFilter@55a3db27, org.springframework.web.filter.CorsFilter@49c90b0c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7a953e41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@646a4915, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c992014, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45b1422b, org.springframework.security.web.session.SessionManagementFilter@63480740, org.springframework.security.web.access.ExceptionTranslationFilter@223251cf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2367728e]
Dec 10, 2020 9:03:50 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39dad8ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@6499e826, org.springframework.security.web.header.HeaderWriterFilter@70466cbe, org.springframework.web.filter.CorsFilter@49c90b0c, org.springframework.security.web.authentication.logout.LogoutFilter@1229ca55, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@154a474e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@562afac5, org.springframework.security.web.session.SessionManagementFilter@112abda8, org.springframework.security.web.access.ExceptionTranslationFilter@3f29c16a]
Dec 10, 2020 9:03:51 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11986 ms
Dec 10, 2020 9:03:51 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:03:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:01 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:02 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7776464d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3253a7b, org.springframework.security.web.header.HeaderWriterFilter@2823a5da, org.springframework.security.web.authentication.logout.LogoutFilter@46bca53a, org.springframework.web.filter.CorsFilter@249fccca, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@55764afe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@484d7d9c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3668b82e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4001e1b2, org.springframework.security.web.session.SessionManagementFilter@3df5c386, org.springframework.security.web.access.ExceptionTranslationFilter@5e33fa1a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@489e767a]
Dec 10, 2020 9:04:02 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a203d8, org.springframework.security.web.context.SecurityContextPersistenceFilter@1b917119, org.springframework.security.web.header.HeaderWriterFilter@4e89983d, org.springframework.web.filter.CorsFilter@249fccca, org.springframework.security.web.authentication.logout.LogoutFilter@132ba11d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4da3dbf1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fe9fa08, org.springframework.security.web.session.SessionManagementFilter@3fbfcb4, org.springframework.security.web.access.ExceptionTranslationFilter@14af5d7]
Dec 10, 2020 9:04:04 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@7c47095b]
Dec 10, 2020 9:04:04 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@19c78972]
Dec 10, 2020 9:04:04 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:04:04 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:14 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:15 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5789a37b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a9f0ef1, org.springframework.security.web.header.HeaderWriterFilter@553ed3a5, org.springframework.security.web.authentication.logout.LogoutFilter@1144b7f2, org.springframework.web.filter.CorsFilter@43f4499f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@749de8d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19c10750, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c61704b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f61f543, org.springframework.security.web.session.SessionManagementFilter@715f39c1, org.springframework.security.web.access.ExceptionTranslationFilter@6cedb7a0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@670fbfd9]
Dec 10, 2020 9:04:15 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6c4d2a07, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d471567, org.springframework.security.web.header.HeaderWriterFilter@25343eba, org.springframework.web.filter.CorsFilter@43f4499f, org.springframework.security.web.authentication.logout.LogoutFilter@4904f26d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60207c90, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64e55fc0, org.springframework.security.web.session.SessionManagementFilter@3d220ddc, org.springframework.security.web.access.ExceptionTranslationFilter@55f18bf]
Dec 10, 2020 9:04:16 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11998 ms
Dec 10, 2020 9:04:16 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:18 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:26 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:28 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d976122, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e98bedd, org.springframework.security.web.header.HeaderWriterFilter@4e4480f8, org.springframework.security.web.authentication.logout.LogoutFilter@13dfd91b, org.springframework.web.filter.CorsFilter@1da0de75, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6204fda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52efb784, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1fc445ac, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73431316, org.springframework.security.web.session.SessionManagementFilter@277d0df7, org.springframework.security.web.access.ExceptionTranslationFilter@498bbac5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7854b20d]
Dec 10, 2020 9:04:28 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c568047, org.springframework.security.web.context.SecurityContextPersistenceFilter@754f60ea, org.springframework.security.web.header.HeaderWriterFilter@da787fa, org.springframework.web.filter.CorsFilter@1da0de75, org.springframework.security.web.authentication.logout.LogoutFilter@4210e0df, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c1dee45, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d34246b, org.springframework.security.web.session.SessionManagementFilter@2d9e5cbe, org.springframework.security.web.access.ExceptionTranslationFilter@6617e38d]
Dec 10, 2020 9:04:28 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@49507796]
Dec 10, 2020 9:04:28 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@54020c41]
Dec 10, 2020 9:04:28 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:04:28 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:38 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:39 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c16a9ff, org.springframework.security.web.context.SecurityContextPersistenceFilter@54ecc95a, org.springframework.security.web.header.HeaderWriterFilter@65643e49, org.springframework.security.web.authentication.logout.LogoutFilter@5730db5, org.springframework.web.filter.CorsFilter@1bc2ef6d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5414c43d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c9fc1af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@44068b32, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@18bef286, org.springframework.security.web.session.SessionManagementFilter@32294a0f, org.springframework.security.web.access.ExceptionTranslationFilter@e9365ef, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2548b700]
Dec 10, 2020 9:04:39 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2182eba3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b30af1c, org.springframework.security.web.header.HeaderWriterFilter@1cc5ad1f, org.springframework.web.filter.CorsFilter@1bc2ef6d, org.springframework.security.web.authentication.logout.LogoutFilter@fe4ed0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a987042, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b04935b, org.springframework.security.web.session.SessionManagementFilter@133ee750, org.springframework.security.web.access.ExceptionTranslationFilter@73804b2b]
Dec 10, 2020 9:04:39 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11627 ms
Dec 10, 2020 9:04:39 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:42 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:49 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:50 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a8a2963, org.springframework.security.web.context.SecurityContextPersistenceFilter@2263d552, org.springframework.security.web.header.HeaderWriterFilter@1d3a36c8, org.springframework.security.web.authentication.logout.LogoutFilter@587de958, org.springframework.web.filter.CorsFilter@7d94892e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@49c8a1a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d42abd8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@313767d0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@260ad1da, org.springframework.security.web.session.SessionManagementFilter@4d97ea5, org.springframework.security.web.access.ExceptionTranslationFilter@6746d7d0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b5c52ca]
Dec 10, 2020 9:04:50 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@631266e8, org.springframework.security.web.context.SecurityContextPersistenceFilter@46240892, org.springframework.security.web.header.HeaderWriterFilter@163629e9, org.springframework.web.filter.CorsFilter@7d94892e, org.springframework.security.web.authentication.logout.LogoutFilter@5148e40, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3592a55c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12ccab66, org.springframework.security.web.session.SessionManagementFilter@49cbc087, org.springframework.security.web.access.ExceptionTranslationFilter@66c2b0ea]
Dec 10, 2020 9:04:51 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@78ecf4bb]
Dec 10, 2020 9:04:51 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@4a454dbc]
Dec 10, 2020 9:04:51 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:04:51 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:04:53 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:01 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:02 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63094913, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a1e8eb8, org.springframework.security.web.header.HeaderWriterFilter@28c0b65d, org.springframework.security.web.authentication.logout.LogoutFilter@66a41ea9, org.springframework.web.filter.CorsFilter@5c731e57, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5cf6592b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48a7cd8b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@442be5a1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3514b96c, org.springframework.security.web.session.SessionManagementFilter@4877586c, org.springframework.security.web.access.ExceptionTranslationFilter@3ab563e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d428bb3]
Dec 10, 2020 9:05:02 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58571351, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a05d7f8, org.springframework.security.web.header.HeaderWriterFilter@1cc2de85, org.springframework.web.filter.CorsFilter@5c731e57, org.springframework.security.web.authentication.logout.LogoutFilter@6c59a335, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7827c5d8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@721b0aaf, org.springframework.security.web.session.SessionManagementFilter@15816ba2, org.springframework.security.web.access.ExceptionTranslationFilter@c8dc9a1]
Dec 10, 2020 9:05:03 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11739 ms
Dec 10, 2020 9:05:03 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:13 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:14 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e69d7ff, org.springframework.security.web.context.SecurityContextPersistenceFilter@77b868b5, org.springframework.security.web.header.HeaderWriterFilter@242e4c91, org.springframework.security.web.authentication.logout.LogoutFilter@149876e5, org.springframework.web.filter.CorsFilter@33d70c0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@54f39e39, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6bc75f64, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a7f877b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f4e8200, org.springframework.security.web.session.SessionManagementFilter@19cea34c, org.springframework.security.web.access.ExceptionTranslationFilter@15cd7888, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@64919346]
Dec 10, 2020 9:05:14 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d25edbc, org.springframework.security.web.context.SecurityContextPersistenceFilter@1894cf37, org.springframework.security.web.header.HeaderWriterFilter@3bfd3104, org.springframework.web.filter.CorsFilter@33d70c0, org.springframework.security.web.authentication.logout.LogoutFilter@33f67182, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f27fd75, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d808284, org.springframework.security.web.session.SessionManagementFilter@7898da0c, org.springframework.security.web.access.ExceptionTranslationFilter@18fd85]
Dec 10, 2020 9:05:14 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@222a392d]
Dec 10, 2020 9:05:14 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@18225c43]
Dec 10, 2020 9:05:14 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:05:14 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:23 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:25 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5e05e2a9, org.springframework.security.web.context.SecurityContextPersistenceFilter@76b6557a, org.springframework.security.web.header.HeaderWriterFilter@5a824c3e, org.springframework.security.web.authentication.logout.LogoutFilter@6a9cb7ab, org.springframework.web.filter.CorsFilter@4e29571f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@443ac324, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74260d6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@669fe6c1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@542ba1a, org.springframework.security.web.session.SessionManagementFilter@2169344b, org.springframework.security.web.access.ExceptionTranslationFilter@783ce814, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@32fc34a5]
Dec 10, 2020 9:05:25 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ca4815d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f336bbf, org.springframework.security.web.header.HeaderWriterFilter@7ce55bde, org.springframework.web.filter.CorsFilter@4e29571f, org.springframework.security.web.authentication.logout.LogoutFilter@86e7d7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ef45445, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3899d9ee, org.springframework.security.web.session.SessionManagementFilter@12a45c75, org.springframework.security.web.access.ExceptionTranslationFilter@6ce7be32]
Dec 10, 2020 9:05:25 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 10692 ms
Dec 10, 2020 9:05:25 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:35 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:37 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4ea639e8, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d11e7de, org.springframework.security.web.header.HeaderWriterFilter@578cff01, org.springframework.security.web.authentication.logout.LogoutFilter@13ef3b97, org.springframework.web.filter.CorsFilter@41df19e3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6081934d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@161f8b3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@694f9a91, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c95be9d, org.springframework.security.web.session.SessionManagementFilter@2119008a, org.springframework.security.web.access.ExceptionTranslationFilter@5348d27e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7904a93e]
Dec 10, 2020 9:05:37 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c6b8e60, org.springframework.security.web.context.SecurityContextPersistenceFilter@54470d72, org.springframework.security.web.header.HeaderWriterFilter@2528897e, org.springframework.web.filter.CorsFilter@41df19e3, org.springframework.security.web.authentication.logout.LogoutFilter@60ab339a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35bfd49c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54bdd82c, org.springframework.security.web.session.SessionManagementFilter@7ab9c372, org.springframework.security.web.access.ExceptionTranslationFilter@2448ba3c]
Dec 10, 2020 9:05:37 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 167.151 s - in com.agiletec.plugins.jpversioning.aps.******.services.versioning.TestVersioningManager
[INFO] Running com.agiletec.plugins.jpversioning.aps.******.services.resource.TestTrashedResourceDAO
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@4b49a227]
Dec 10, 2020 9:05:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@16740c53]
Dec 10, 2020 9:05:37 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:05:37 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:48 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:50 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@72cc85ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a1222d, org.springframework.security.web.header.HeaderWriterFilter@302f9d08, org.springframework.security.web.authentication.logout.LogoutFilter@4876a06c, org.springframework.web.filter.CorsFilter@7510e164, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@535aade2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a4d3c80, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c9f30b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d7846ab, org.springframework.security.web.session.SessionManagementFilter@276c6b2f, org.springframework.security.web.access.ExceptionTranslationFilter@57b3b908, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@585bd9ef]
Dec 10, 2020 9:05:50 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30840aa1, org.springframework.security.web.context.SecurityContextPersistenceFilter@55cb9d42, org.springframework.security.web.header.HeaderWriterFilter@7081c496, org.springframework.web.filter.CorsFilter@7510e164, org.springframework.security.web.authentication.logout.LogoutFilter@392cb14b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@160d76c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68d6a5e3, org.springframework.security.web.session.SessionManagementFilter@28bf3280, org.springframework.security.web.access.ExceptionTranslationFilter@5f638ccf]
Dec 10, 2020 9:05:50 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 12898 ms
Dec 10, 2020 9:05:50 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:05:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:00 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:01 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b89e041, org.springframework.security.web.context.SecurityContextPersistenceFilter@130b0b7b, org.springframework.security.web.header.HeaderWriterFilter@29587a42, org.springframework.security.web.authentication.logout.LogoutFilter@63c639c0, org.springframework.web.filter.CorsFilter@5eeaa65a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1dbf81db, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e7dd57f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c3aff0f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19eb9d4d, org.springframework.security.web.session.SessionManagementFilter@17ef1286, org.springframework.security.web.access.ExceptionTranslationFilter@6c61a19b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@300ed112]
Dec 10, 2020 9:06:01 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ff8c814, org.springframework.security.web.context.SecurityContextPersistenceFilter@25c73e65, org.springframework.security.web.header.HeaderWriterFilter@1118dd3c, org.springframework.web.filter.CorsFilter@5eeaa65a, org.springframework.security.web.authentication.logout.LogoutFilter@1350e80d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1036a599, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@47907b9e, org.springframework.security.web.session.SessionManagementFilter@f6b6ffe, org.springframework.security.web.access.ExceptionTranslationFilter@545c330f]
Dec 10, 2020 9:06:01 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@2a78ef56]
Dec 10, 2020 9:06:01 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@273e75e3]
Dec 10, 2020 9:06:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:06:01 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:12 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:13 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70eb2688, org.springframework.security.web.context.SecurityContextPersistenceFilter@362a0268, org.springframework.security.web.header.HeaderWriterFilter@700e6929, org.springframework.security.web.authentication.logout.LogoutFilter@10304b2b, org.springframework.web.filter.CorsFilter@1f726b56, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7d483220, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4490859d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2dd09cb1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f31c9ff, org.springframework.security.web.session.SessionManagementFilter@24c62523, org.springframework.security.web.access.ExceptionTranslationFilter@4b3049e5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74d77894]
Dec 10, 2020 9:06:13 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66d4bce7, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ffc79c1, org.springframework.security.web.header.HeaderWriterFilter@283f781e, org.springframework.web.filter.CorsFilter@1f726b56, org.springframework.security.web.authentication.logout.LogoutFilter@7a7af018, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7723e704, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@248f8e76, org.springframework.security.web.session.SessionManagementFilter@6ba6b1be, org.springframework.security.web.access.ExceptionTranslationFilter@96026fc]
Dec 10, 2020 9:06:13 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 12384 ms
Dec 10, 2020 9:06:13 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:16 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:24 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:26 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@129ad686, org.springframework.security.web.context.SecurityContextPersistenceFilter@64ce6af9, org.springframework.security.web.header.HeaderWriterFilter@1781623e, org.springframework.security.web.authentication.logout.LogoutFilter@6ad3e4b, org.springframework.web.filter.CorsFilter@5f693978, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@19260f7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73c30439, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53c5cc1a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6aa03ab5, org.springframework.security.web.session.SessionManagementFilter@78698509, org.springframework.security.web.access.ExceptionTranslationFilter@5d109f37, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3910c4ea]
Dec 10, 2020 9:06:26 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@347d1299, org.springframework.security.web.context.SecurityContextPersistenceFilter@64907adc, org.springframework.security.web.header.HeaderWriterFilter@2f5a844c, org.springframework.web.filter.CorsFilter@5f693978, org.springframework.security.web.authentication.logout.LogoutFilter@535cc4b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36c9e5e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78ef029b, org.springframework.security.web.session.SessionManagementFilter@11d759f3, org.springframework.security.web.access.ExceptionTranslationFilter@44c47bf3]
Dec 10, 2020 9:06:26 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@30f8252e]
Dec 10, 2020 9:06:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@5a4169aa]
Dec 10, 2020 9:06:26 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:06:26 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:28 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:37 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:38 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c3094, org.springframework.security.web.context.SecurityContextPersistenceFilter@30a872cf, org.springframework.security.web.header.HeaderWriterFilter@4d166905, org.springframework.security.web.authentication.logout.LogoutFilter@4a66c39e, org.springframework.web.filter.CorsFilter@804eab1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2006504d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@192a89dc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a389dcb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@638069b5, org.springframework.security.web.session.SessionManagementFilter@c99a697, org.springframework.security.web.access.ExceptionTranslationFilter@5226051e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a5e2d54]
Dec 10, 2020 9:06:38 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@577d7c63, org.springframework.security.web.context.SecurityContextPersistenceFilter@14a2fa7f, org.springframework.security.web.header.HeaderWriterFilter@2d8be3e3, org.springframework.web.filter.CorsFilter@804eab1, org.springframework.security.web.authentication.logout.LogoutFilter@548f058f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ecf81a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c29f367, org.springframework.security.web.session.SessionManagementFilter@45b1bbe6, org.springframework.security.web.access.ExceptionTranslationFilter@4d26e633]
Dec 10, 2020 9:06:38 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 12038 ms
Dec 10, 2020 9:06:38 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:40 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:48 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:06:49 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73dadade, org.springframework.security.web.context.SecurityContextPersistenceFilter@7cb25d90, org.springframework.security.web.header.HeaderWriterFilter@1588b304, org.springframework.security.web.authentication.logout.LogoutFilter@6a3f2fe8, org.springframework.web.filter.CorsFilter@1f6ba022, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2e285ae7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e7b1d2d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6254c5e6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f3a95b8, org.springframework.security.web.session.SessionManagementFilter@6c3370fb, org.springframework.security.web.access.ExceptionTranslationFilter@1e073524, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@112a3b63]
Dec 10, 2020 9:06:49 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e821dfe, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ef2ef37, org.springframework.security.web.header.HeaderWriterFilter@51d2caba, org.springframework.web.filter.CorsFilter@1f6ba022, org.springframework.security.web.authentication.logout.LogoutFilter@3700d77e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74ce1144, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@338e927d, org.springframework.security.web.session.SessionManagementFilter@1883913b, org.springframework.security.web.access.ExceptionTranslationFilter@1a0e0b16]
Dec 10, 2020 9:06:49 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 72.404 s - in com.agiletec.plugins.jpversioning.aps.******.services.resource.TestTrashedResourceDAO
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
[INFO] Running com.agiletec.plugins.jpversioning.aps.******.services.resource.TestTrashedResourceManager
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@d3933c4]
Dec 10, 2020 9:06:49 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@3a989a66]
Dec 10, 2020 9:06:49 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:06:49 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:06:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:06:58 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:00 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@156c550d, org.springframework.security.web.context.SecurityContextPersistenceFilter@45ffea62, org.springframework.security.web.header.HeaderWriterFilter@77b60e27, org.springframework.security.web.authentication.logout.LogoutFilter@36499975, org.springframework.web.filter.CorsFilter@732006c7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1ffec4d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c8253e0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@347898b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17d0cbf8, org.springframework.security.web.session.SessionManagementFilter@2bacf8df, org.springframework.security.web.access.ExceptionTranslationFilter@7d131695, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5527f793]
Dec 10, 2020 9:07:00 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32ce72a0, org.springframework.security.web.context.SecurityContextPersistenceFilter@3824b90e, org.springframework.security.web.header.HeaderWriterFilter@8148b1d, org.springframework.web.filter.CorsFilter@732006c7, org.springframework.security.web.authentication.logout.LogoutFilter@2f3f5280, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7181a621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d61876f, org.springframework.security.web.session.SessionManagementFilter@19fd6a21, org.springframework.security.web.access.ExceptionTranslationFilter@198a0cdf]
Dec 10, 2020 9:07:00 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 10673 ms
Dec 10, 2020 9:07:00 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:09 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:11 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40b7642b, org.springframework.security.web.context.SecurityContextPersistenceFilter@3130f362, org.springframework.security.web.header.HeaderWriterFilter@383a0bdc, org.springframework.security.web.authentication.logout.LogoutFilter@6825725c, org.springframework.web.filter.CorsFilter@2594d8d4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3239033, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20ab753b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bcfc5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@637ac67a, org.springframework.security.web.session.SessionManagementFilter@285227a1, org.springframework.security.web.access.ExceptionTranslationFilter@4a0fb971, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c0ac391]
Dec 10, 2020 9:07:11 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c315d41, org.springframework.security.web.context.SecurityContextPersistenceFilter@722d61ca, org.springframework.security.web.header.HeaderWriterFilter@7d735f74, org.springframework.web.filter.CorsFilter@2594d8d4, org.springframework.security.web.authentication.logout.LogoutFilter@658b530b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42daf9c7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25359617, org.springframework.security.web.session.SessionManagementFilter@54c28795, org.springframework.security.web.access.ExceptionTranslationFilter@488f0909]
Dec 10, 2020 9:07:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 205
Dec 10, 2020 9:07:11 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@7883276b]
Dec 10, 2020 9:07:11 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@708a6ddd]
Dec 10, 2020 9:07:11 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:07:11 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:14 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:21 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:22 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e30b3f6, org.springframework.security.web.context.SecurityContextPersistenceFilter@49b9c9ef, org.springframework.security.web.header.HeaderWriterFilter@52718525, org.springframework.security.web.authentication.logout.LogoutFilter@20bbd94, org.springframework.web.filter.CorsFilter@39df5389, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@72903a4d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57034535, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2cee4d08, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@722e5156, org.springframework.security.web.session.SessionManagementFilter@381562e0, org.springframework.security.web.access.ExceptionTranslationFilter@3ee99d93, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5601d231]
Dec 10, 2020 9:07:22 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3045dd52, org.springframework.security.web.context.SecurityContextPersistenceFilter@68353ada, org.springframework.security.web.header.HeaderWriterFilter@5171a8eb, org.springframework.web.filter.CorsFilter@39df5389, org.springframework.security.web.authentication.logout.LogoutFilter@7167da4e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@16259e7d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a4f5aa2, org.springframework.security.web.session.SessionManagementFilter@2802623f, org.springframework.security.web.access.ExceptionTranslationFilter@51d5f766]
Dec 10, 2020 9:07:22 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 11039 ms
Dec 10, 2020 9:07:22 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:25 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:32 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:34 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a5642cd, org.springframework.security.web.context.SecurityContextPersistenceFilter@4bf4efdc, org.springframework.security.web.header.HeaderWriterFilter@176ed051, org.springframework.security.web.authentication.logout.LogoutFilter@6963da13, org.springframework.web.filter.CorsFilter@4ad48cf6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1e011d4f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d4655fd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30762e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c7fa8, org.springframework.security.web.session.SessionManagementFilter@3de09616, org.springframework.security.web.access.ExceptionTranslationFilter@6c48f56b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28cbd9e4]
Dec 10, 2020 9:07:34 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a1c485f, org.springframework.security.web.context.SecurityContextPersistenceFilter@18163b26, org.springframework.security.web.header.HeaderWriterFilter@5af965b8, org.springframework.web.filter.CorsFilter@4ad48cf6, org.springframework.security.web.authentication.logout.LogoutFilter@437a941d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7dd8af0e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c1dd1a8, org.springframework.security.web.session.SessionManagementFilter@464d30b6, org.springframework.security.web.access.ExceptionTranslationFilter@39cb8c16]
Dec 10, 2020 9:07:34 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@7ec7522d]
Dec 10, 2020 9:07:34 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@10f75c72]
Dec 10, 2020 9:07:34 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:07:34 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:36 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:43 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:44 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f1126b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ab4f2da, org.springframework.security.web.header.HeaderWriterFilter@35ff387c, org.springframework.security.web.authentication.logout.LogoutFilter@5fcc78ff, org.springframework.web.filter.CorsFilter@42ae6b9c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1914f311, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22386b1b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@631840f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c576379, org.springframework.security.web.session.SessionManagementFilter@9c6580b, org.springframework.security.web.access.ExceptionTranslationFilter@5697933c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38755b71]
Dec 10, 2020 9:07:44 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e6e9230, org.springframework.security.web.context.SecurityContextPersistenceFilter@15441c8b, org.springframework.security.web.header.HeaderWriterFilter@182f0fec, org.springframework.web.filter.CorsFilter@42ae6b9c, org.springframework.security.web.authentication.logout.LogoutFilter@4b7b6f90, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d36316a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d86054f, org.springframework.security.web.session.SessionManagementFilter@f7f3e99, org.springframework.security.web.access.ExceptionTranslationFilter@6f94e5cc]
Dec 10, 2020 9:07:44 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 10549 ms
Dec 10, 2020 9:07:44 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:54 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:55 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8887cf, org.springframework.security.web.context.SecurityContextPersistenceFilter@34b32146, org.springframework.security.web.header.HeaderWriterFilter@59590507, org.springframework.security.web.authentication.logout.LogoutFilter@3bef3e69, org.springframework.web.filter.CorsFilter@77d15510, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@44e6922a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@588c8105, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2931756e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@446325d5, org.springframework.security.web.session.SessionManagementFilter@3691f5d3, org.springframework.security.web.access.ExceptionTranslationFilter@5c5498aa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63789df]
Dec 10, 2020 9:07:55 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62dab0e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@725cdc8, org.springframework.security.web.header.HeaderWriterFilter@50effe76, org.springframework.web.filter.CorsFilter@77d15510, org.springframework.security.web.authentication.logout.LogoutFilter@4b386fc2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7352f98a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c61b5d8, org.springframework.security.web.session.SessionManagementFilter@25764719, org.springframework.security.web.access.ExceptionTranslationFilter@d7f2f81]
Dec 10, 2020 9:07:56 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 206
Dec 10, 2020 9:07:56 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@7379a244]
Dec 10, 2020 9:07:56 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@5249d0f4]
Dec 10, 2020 9:07:56 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:07:56 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:07:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:05 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:06 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3feef81d, org.springframework.security.web.context.SecurityContextPersistenceFilter@16f0ae2e, org.springframework.security.web.header.HeaderWriterFilter@62073a3c, org.springframework.security.web.authentication.logout.LogoutFilter@1727e98e, org.springframework.web.filter.CorsFilter@fc9b4b3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@127e4b94, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@96b0033, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a4a6a8d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38544f1d, org.springframework.security.web.session.SessionManagementFilter@78dd4bc, org.springframework.security.web.access.ExceptionTranslationFilter@493634c9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f5e3027]
Dec 10, 2020 9:08:06 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5cc3efcb, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a8f5791, org.springframework.security.web.header.HeaderWriterFilter@36a0d32a, org.springframework.web.filter.CorsFilter@fc9b4b3, org.springframework.security.web.authentication.logout.LogoutFilter@6cc01e1d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54ef6d1f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6466cd2b, org.springframework.security.web.session.SessionManagementFilter@2d64a94b, org.springframework.security.web.access.ExceptionTranslationFilter@2c165d12]
Dec 10, 2020 9:08:06 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 10810 ms
Dec 10, 2020 9:08:06 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:16 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:17 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7724db14, org.springframework.security.web.context.SecurityContextPersistenceFilter@26f97eb8, org.springframework.security.web.header.HeaderWriterFilter@2513efec, org.springframework.security.web.authentication.logout.LogoutFilter@3265f4d6, org.springframework.web.filter.CorsFilter@457b5c6d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7b8211d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51209da4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a0236c8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13938d8c, org.springframework.security.web.session.SessionManagementFilter@3b9fee4e, org.springframework.security.web.access.ExceptionTranslationFilter@4d5c41a1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@218cccae]
Dec 10, 2020 9:08:17 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5cee45b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@8883b78, org.springframework.security.web.header.HeaderWriterFilter@22c415bf, org.springframework.web.filter.CorsFilter@457b5c6d, org.springframework.security.web.authentication.logout.LogoutFilter@15f4ff8f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@522dfd3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7494b25, org.springframework.security.web.session.SessionManagementFilter@38f54b48, org.springframework.security.web.access.ExceptionTranslationFilter@2d340278]
Dec 10, 2020 9:08:17 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 207
Dec 10, 2020 9:08:17 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@674320da]
Dec 10, 2020 9:08:17 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@5e4c2aeb]
Dec 10, 2020 9:08:17 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:08:17 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:19 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:26 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:27 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a71655d, org.springframework.security.web.context.SecurityContextPersistenceFilter@ab8b7af, org.springframework.security.web.header.HeaderWriterFilter@2d08481, org.springframework.security.web.authentication.logout.LogoutFilter@794fd61e, org.springframework.web.filter.CorsFilter@4df09a8c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@244508bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1450bc5b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60e71167, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1069c079, org.springframework.security.web.session.SessionManagementFilter@10cca799, org.springframework.security.web.access.ExceptionTranslationFilter@64e0158d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7cde4388]
Dec 10, 2020 9:08:27 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70de4e3b, org.springframework.security.web.context.SecurityContextPersistenceFilter@480414c4, org.springframework.security.web.header.HeaderWriterFilter@4ba558aa, org.springframework.web.filter.CorsFilter@4df09a8c, org.springframework.security.web.authentication.logout.LogoutFilter@1894cbd9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54cabfcd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@354bcdf6, org.springframework.security.web.session.SessionManagementFilter@3e5d2f4, org.springframework.security.web.access.ExceptionTranslationFilter@15912869]
Dec 10, 2020 9:08:27 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 9635 ms
Dec 10, 2020 9:08:27 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:29 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:35 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:36 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a62e537, org.springframework.security.web.context.SecurityContextPersistenceFilter@4a06e75c, org.springframework.security.web.header.HeaderWriterFilter@649342ec, org.springframework.security.web.authentication.logout.LogoutFilter@4b8b24c2, org.springframework.web.filter.CorsFilter@bd508eb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@70a53246, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46850cde, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4281022e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d7d9113, org.springframework.security.web.session.SessionManagementFilter@7d9541e6, org.springframework.security.web.access.ExceptionTranslationFilter@33a65bed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@282be95a]
Dec 10, 2020 9:08:36 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37137c6b, org.springframework.security.web.context.SecurityContextPersistenceFilter@587e14a6, org.springframework.security.web.header.HeaderWriterFilter@433ee83, org.springframework.web.filter.CorsFilter@bd508eb, org.springframework.security.web.authentication.logout.LogoutFilter@1fe08015, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25d50b42, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e89ae8d, org.springframework.security.web.session.SessionManagementFilter@84531b8, org.springframework.security.web.access.ExceptionTranslationFilter@45071a39]
Dec 10, 2020 9:08:37 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 208
Dec 10, 2020 9:08:37 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 107.538 s - in com.agiletec.plugins.jpversioning.aps.******.services.resource.TestTrashedResourceManager
[INFO] Running com.agiletec.plugins.jpversioning.aps*****.resource.TestTrashedResourceAction
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
[INFO ] 2020-12-10 21:09:00.583 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:02.932 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:09.800 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:10.478 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:11.001 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:12.061 [main] SpringObjectFactory - Setting autowire strategy to name
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@3a9817ce]
Dec 10, 2020 9:08:37 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@56ee0a20]
Dec 10, 2020 9:08:37 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring **** WebApplicationContext
Dec 10, 2020 9:08:37 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext: initialization started
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:39 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:45 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:46 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@257f5169, org.springframework.security.web.context.SecurityContextPersistenceFilter@731ee583, org.springframework.security.web.header.HeaderWriterFilter@5d468410, org.springframework.security.web.authentication.logout.LogoutFilter@5aa5c40, org.springframework.web.filter.CorsFilter@3b845d3f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@14747e7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e933335, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@341542ab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fd8c59a, org.springframework.security.web.session.SessionManagementFilter@3a908b2a, org.springframework.security.web.access.ExceptionTranslationFilter@118766f7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@20ca0860]
Dec 10, 2020 9:08:46 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26d07fe3, org.springframework.security.web.context.SecurityContextPersistenceFilter@35cf7aac, org.springframework.security.web.header.HeaderWriterFilter@4f2f2aa2, org.springframework.web.filter.CorsFilter@3b845d3f, org.springframework.security.web.authentication.logout.LogoutFilter@68046255, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@350280c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34ed6f1, org.springframework.security.web.session.SessionManagementFilter@350bc548, org.springframework.security.web.access.ExceptionTranslationFilter@1682c9fd]
Dec 10, 2020 9:08:46 PM org.springframework.web.context.ContextLoader initWebApplicationContext
INFO: Root WebApplicationContext initialized in 9225 ms
Dec 10, 2020 9:08:46 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport shutdown
INFO: Shutting down E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   
Dec 10, 2020 9:08:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   
Dec 10, 2020 9:08:56 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'
Dec 10, 2020 9:08:57 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24791da8, org.springframework.security.web.context.SecurityContextPersistenceFilter@4257f116, org.springframework.security.web.header.HeaderWriterFilter@db00fae, org.springframework.security.web.authentication.logout.LogoutFilter@48075328, org.springframework.web.filter.CorsFilter@30cca2eb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3dd00338, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59bf5a89, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5f8bdd9f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56691263, org.springframework.security.web.session.SessionManagementFilter@574af2b8, org.springframework.security.web.access.ExceptionTranslationFilter@7489bfa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@70304631]
Dec 10, 2020 9:08:57 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c97f220, org.springframework.security.web.context.SecurityContextPersistenceFilter@419a0a2, org.springframework.security.web.header.HeaderWriterFilter@2ddbcef8, org.springframework.web.filter.CorsFilter@30cca2eb, org.springframework.security.web.authentication.logout.LogoutFilter@15c24c8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e2b504f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3df4eb7c, org.springframework.security.web.session.SessionManagementFilter@64e99ee6, org.springframework.security.web.access.ExceptionTranslationFilter@333f28f6]
Dec 10, 2020 9:09:03 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: Unrecognized location of resource '/workspace/source/target/classes/com/agiletec/plugins/jpversioning/aps*****/global-messages_en.properties'
Dec 10, 2020 9:09:03 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: Unrecognized location of resource '/workspace/source/target/classes/com/agiletec/plugins/jpversioning/aps*****/global-messages_it.properties'
Dec 10, 2020 9:09:03 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: Unrecognized location of resource 'file:/home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jacms/6.3.0/entando-plugin-jacms-6.3.0-classes.jar!/org/entando/entando/plugins/jacms/aps*****/global-messages_en.properties'
Dec 10, 2020 9:09:03 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: Unrecognized location of resource 'file:/home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jacms/6.3.0/entando-plugin-jacms-6.3.0-classes.jar!/org/entando/entando/plugins/jacms/aps*****/global-messages_it.properties'
Dec 10, 2020 9:09:03 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: Unrecognized location of resource 'file:/home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jacms/6.3.0/entando-plugin-jacms-6.3.0-classes.jar!/com/agiletec/plugins/jacms/aps*****/global-messages_en.properties'
Dec 10, 2020 9:09:03 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: Unrecognized location of resource 'file:/home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jacms/6.3.0/entando-plugin-jacms-6.3.0-classes.jar!/com/agiletec/plugins/jacms/aps*****/global-messages_it.properties'
Dec 10, 2020 9:09:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 70
Dec 10, 2020 9:09:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 70
Dec 10, 2020 9:09:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 70
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 35.371 s - in com.agiletec.plugins.jpversioning.aps*****.resource.TestTrashedResourceAction
[INFO] Running com.agiletec.plugins.jpversioning.aps*****.versioning.TestVersionFinderAction
[INFO ] 2020-12-10 21:09:13.000 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:13.775 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.062 s - in com.agiletec.plugins.jpversioning.aps*****.versioning.TestVersionFinderAction
[INFO] Running com.agiletec.plugins.jpversioning.aps*****.versioning.TestVersionAction
[INFO ] 2020-12-10 21:09:15.143 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:17.808 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:18.466 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:18.905 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:19.590 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO ] 2020-12-10 21:09:20.745 [main] SpringObjectFactory - Setting autowire strategy to name
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.212 s - in com.agiletec.plugins.jpversioning.aps*****.versioning.TestVersionAction
[INFO] Running org.entando.entando.jpversioning.services.content.ContentVersioningServiceTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.649 s - in org.entando.entando.jpversioning.services.content.ContentVersioningServiceTest
Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@4cd66fcb]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@23365019]

Dec 10, 2020 9:09:26 PM org.springframework.mock.jndi.SimpleNamingContextBuilder activate
INFO: Activating simple JNDI environment

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: Core ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jacms ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-*****-console ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: entando-portal-ui ] :: DATA
|   

Dec 10, 2020 9:09:30 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: + [ Component: jpversioning ] :: DATA
|   

Dec 10, 2020 9:09:37 PM org.springframework.scheduling.concurrent.E**cutorConfigurationSupport initialize
INFO: Initializing E**cutorService 'entandoScheduler'

[INFO ] 2020-12-10 21:09:38.846 [main] Version - HV000001: Hibernate Validator 6.0.17.Final

Dec 10, 2020 9:09:42 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6736cc14, org.springframework.security.web.context.SecurityContextPersistenceFilter@61999047, org.springframework.security.web.header.HeaderWriterFilter@33b3e2e4, org.springframework.security.web.authentication.logout.LogoutFilter@790eca82, org.springframework.web.filter.CorsFilter@2dcbf345, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@11f42d92, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@146157de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a2428b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f9f3d6c, org.springframework.security.web.session.SessionManagementFilter@758f4834, org.springframework.security.web.access.ExceptionTranslationFilter@74220f6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7634f12e]

Dec 10, 2020 9:09:42 PM org.springframework.security.web.DefaultSecurityFilterChain <init>
INFO: Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ef47287, org.springframework.security.web.context.SecurityContextPersistenceFilter@7aefc856, org.springframework.security.web.header.HeaderWriterFilter@1996ce89, org.springframework.web.filter.CorsFilter@2dcbf345, org.springframework.security.web.authentication.logout.LogoutFilter@5addbcf2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@227129fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@dbc49ba, org.springframework.security.web.session.SessionManagementFilter@4ae3aabd, org.springframework.security.web.access.ExceptionTranslationFilter@7f84f848]

[INFO] Running org.entando.entando.jpversioning.services.configuration.VersioningConfigurationServiceTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.627 s - in org.entando.entando.jpversioning.services.configuration.VersioningConfigurationServiceTest
Dec 10, 2020 9:09:43 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:43 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:43 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 96 ms
[INFO] Running org.entando.entando.jpversioning.web.content.ContentVersioningControllerIntegrationTest

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:09:46 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
Dec 10, 2020 9:09:46 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:46 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:46 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 12 ms
Dec 10, 2020 9:09:47 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
Dec 10, 2020 9:09:47 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:47 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:47 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
             Body = {"payload":[{"id":"CT1210","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:44","lastModified":"2020-12-10 21:09:44","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.updateContents(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1210","typeCode":"CT1","typeDescription":"Content Type CT1","description":"another description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:44","lastModified":"2020-12-10 21:09:45","version":"0.2","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.updateContents(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1210","typeCode":"CT1","typeDescription":"Content Type CT1","description":"test description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:44","lastModified":"2020-12-10 21:09:45","version":"0.3","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1210/versions/1
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.getContentVersion(java.lang.String,java.lang.Long)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"CT1210","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":null,"lastModified":"2020-12-10 21:09:44","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1210
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1210","contentType":"CT1","description":"another description","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:45"},{"id":1,"contentId":"CT1210","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:44"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1210
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1210","contentType":"CT1","description":"test description","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:45"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1211","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:46","lastModified":"2020-12-10 21:09:46","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1212","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:46","lastModified":"2020-12-10 21:09:46","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT1212","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"},{"id":2,"contentId":"CT1211","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1212
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT1212","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"},{"id":3,"contentId":"CT1212","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1212
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1212","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1211
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
Dec 10, 2020 9:09:48 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1211","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"},{"id":1,"contentId":"CT1211","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1211
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1211","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:46"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1213","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:47","lastModified":"2020-12-10 21:09:47","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1213
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1213
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1213","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:47"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1213
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1213","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:47"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1213
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1213","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:47"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:09:48 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:09:48 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:48 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 5 ms
             Body = {"payload":[{"id":"CT1214","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:49","lastModified":"2020-12-10 21:09:49","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.updateContents(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1214","typeCode":"CT1","typeDescription":"Content Type CT1","description":"another description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:49","lastModified":"2020-12-10 21:09:49","version":"0.2","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.updateContents(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1214","typeCode":"CT1","typeDescription":"Content Type CT1","description":"test description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:49","lastModified":"2020-12-10 21:09:49","version":"0.3","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1214
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1214","contentType":"CT1","description":"another description","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:49"},{"id":1,"contentId":"CT1214","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:49"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/versioning/contents/CT1214/versions/2
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.delete(java.lang.String,java.lang.Long)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"versionId":"2"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1214/versions/2
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.getContentVersion(java.lang.String,java.lang.Long)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = org.entando.entando.aps.******.exception.ResourceNotFoundException

ModelAndView:
        View name = null
Dec 10, 2020 9:09:49 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
Dec 10, 2020 9:09:49 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:49 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:49 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 5 ms
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":[],"errors":[{"code":"2","message":"a Content Version with CT1214 version 2 code could not be found"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1214
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1214","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:49"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1214
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1214","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:49"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1214
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1214","contentType":"CT1","description":"test description","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:49"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1215","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:50","lastModified":"2020-12-10 21:09:50","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.5","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":4,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.4","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":3,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":2,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":1,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":5,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {pageSize=[4], page=[1]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.5","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":4,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.4","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":3,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":2,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"}],"metaData":{"page":1,"pageSize":4,"lastPage":2,"totalItems":5,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {pageSize=[4], page=[2]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"}],"metaData":{"page":2,"pageSize":4,"lastPage":2,"totalItems":5,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:09:51 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
Dec 10, 2020 9:09:51 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:51 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:51 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.5","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":4,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.4","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":3,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":2,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"},{"id":1,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":5,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1215
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1215","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.6","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:50"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1216","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:51","lastModified":"2020-12-10 21:09:51","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1216
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1216","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1217","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:51","lastModified":"2020-12-10 21:09:51","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1217
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1217","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1218","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:51","lastModified":"2020-12-10 21:09:51","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1218
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1218","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1218","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"},{"id":2,"contentId":"CT1217","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"},{"id":1,"contentId":"CT1216","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1218
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1218","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1218
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1218","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1217
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1217","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1217
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1217","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1216
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1216","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1216
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1216","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:51"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
Dec 10, 2020 9:09:52 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
          Cookies = []
Dec 10, 2020 9:09:52 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:52 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:52 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 8 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1219","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:53","lastModified":"2020-12-10 21:09:53","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1220","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:53","lastModified":"2020-12-10 21:09:53","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1221","typeCode":"CT1","typeDescription":"Content Type CT1","description":"another description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:53","lastModified":"2020-12-10 21:09:53","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT2222","typeCode":"CT2","typeDescription":"Content Type CT2","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:53","lastModified":"2020-12-10 21:09:53","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT2223","typeCode":"CT2","typeDescription":"Content Type CT2","description":"another description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:53","lastModified":"2020-12-10 21:09:53","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[CT1], filters[0].attribute=[wrongName]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = org.entando.entando.web.common.exceptions.ValidationGenericException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":[],"errors":[{"code":"101","message":"the filtering attribute 'wrongName' does not exist"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[CT1], filters[0].attribute=[contentType]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1221","contentType":"CT1","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":2,"contentId":"CT1220","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":1,"contentId":"CT1219","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"id","direction":"ASC","filters":[{"attribute":"contentType","entityAttr":null,"operator":"like","value":"CT1","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[CT2], filters[0].attribute=[contentType]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT2223","contentType":"CT2","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":4,"contentId":"CT2222","contentType":"CT2","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[{"attribute":"contentType","entityAttr":null,"operator":"like","value":"CT2","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[content-bool], filters[0].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT2222","contentType":"CT2","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":2,"contentId":"CT1220","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":1,"contentId":"CT1219","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"id","direction":"ASC","filters":[{"attribute":"description","entityAttr":null,"operator":"like","value":"content-bool","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[another description], filters[0].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT2223","contentType":"CT2","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":3,"contentId":"CT1221","contentType":"CT1","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[{"attribute":"description","entityAttr":null,"operator":"like","value":"another description","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[CT1], filters[1].value=[content-bool], filters[0].attribute=[contentType], filters[1].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1220","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"},{"id":1,"contentId":"CT1219","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"id","direction":"ASC","filters":[{"attribute":"contentType","entityAttr":null,"operator":"like","value":"CT1","allowedValues":null},{"attribute":"description","entityAttr":null,"operator":"like","value":"content-bool","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {filters[0].value=[CT2], filters[1].value=[another description], filters[0].attribute=[contentType], filters[1].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT2223","contentType":"CT2","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[{"attribute":"contentType","entityAttr":null,"operator":"like","value":"CT2","allowedValues":null},{"attribute":"description","entityAttr":null,"operator":"like","value":"another description","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT2223
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT2223","contentType":"CT2","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT2223
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT2223","contentType":"CT2","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT2222
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT2222","contentType":"CT2","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT2222
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT2222","contentType":"CT2","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1221
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1221","contentType":"CT1","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1221
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1221","contentType":"CT1","description":"another description","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1220
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1220","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1220
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1220","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1219
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1219","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1219
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:09:54 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
Dec 10, 2020 9:09:54 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT2
Dec 10, 2020 9:09:54 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:54 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:54 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 11 ms
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1219","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:53"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1224","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:56","lastModified":"2020-12-10 21:09:56","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1225","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:56","lastModified":"2020-12-10 21:09:56","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1226","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:56","lastModified":"2020-12-10 21:09:56","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1227","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:56","lastModified":"2020-12-10 21:09:56","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1228","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:56","lastModified":"2020-12-10 21:09:56","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {pageSize=[2], page=[2]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1226","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"},{"id":2,"contentId":"CT1225","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":2,"pageSize":2,"lastPage":3,"totalItems":5,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/
       Parameters = {pageSize=[4], page=[1]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listLatestVersions(org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT1228","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"},{"id":4,"contentId":"CT1227","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"},{"id":3,"contentId":"CT1226","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"},{"id":2,"contentId":"CT1225","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":4,"lastPage":2,"totalItems":5,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1228
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT1228","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1228
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":5,"contentId":"CT1228","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1227
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT1227","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1227
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT1227","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1226
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1226","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1226
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":3,"contentId":"CT1226","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1225
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1225","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1225
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":2,"contentId":"CT1225","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1224
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1224","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1224
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}
Dec 10, 2020 9:09:58 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
Dec 10, 2020 9:09:58 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:09:58 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:09:58 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1224","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:56"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.addContent(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1229","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:58","lastModified":"2020-12-10 21:09:58","version":"0.1","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.updateContents(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1229","typeCode":"CT1","typeDescription":"Content Type CT1","description":"another description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:58","lastModified":"2020-12-10 21:09:59","version":"0.2","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/cms/contents
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.content.ContentController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>>> org.entando.entando.plugins.jacms.web.content.ContentController.updateContents(java.util.List<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto>,org.springframework.validation.BindingResult)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"CT1229","typeCode":"CT1","typeDescription":"Content Type CT1","description":"test description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:58","lastModified":"2020-12-10 21:09:59","version":"0.3","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}],"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/versioning/contents/CT1229/versions/1/recover
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.recoverContentVersion(java.lang.String,java.lang.Long)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"CT1229","typeCode":"CT1","typeDescription":"Content Type CT1","description":"content-bool","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":null,"lastModified":"2020-12-10 21:09:59","version":"0.4","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/versioning/contents/CT1229/versions/2/recover
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<com.agiletec.plugins.jacms.aps.******.services.content.model.ContentDto> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.recoverContentVersion(java.lang.String,java.lang.Long)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:00 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: Notified content type modify : type CT1
             Body = {"id":"CT1229","typeCode":"CT1","typeDescription":"Content Type CT1","description":"another description","mainGroup":"free","attributes":[{"code":"bool","value":true,"values":{},"elements":[],"compositeelements":[],"listelements":{}}],"status":"NEW","onLine":*****,"viewPage":null,"listModel":null,"defaultModel":null,"created":"2020-12-10 21:09:58","lastModified":"2020-12-10 21:09:59","version":"0.5","firstEditor":"jack_bauer","lastEditor":"jack_bauer","restriction":"OPEN","html":null}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1229
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":4,"contentId":"CT1229","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.4","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:59"},{"id":3,"contentId":"CT1229","contentType":"CT1","description":"test description","status":"NEW","version":"0.3","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:59"},{"id":2,"contentId":"CT1229","contentType":"CT1","description":"another description","status":"NEW","version":"0.2","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:59"},{"id":1,"contentId":"CT1229","contentType":"CT1","description":"content-bool","status":"NEW","version":"0.1","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:58"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/contents/CT1229
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.content.model.ContentVersionDTO>> org.entando.entando.plugins.jpversioning.web.content.ContentVersioningController.listContentVersions(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":1,"contentId":"CT1229","contentType":"CT1","description":"another description","status":"NEW","version":"0.5","onlineVersion":0,"approved":*****,"username":"jack_bauer","versionDate":"2020-12-10 21:09:59"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"id","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.58 s - in org.entando.entando.jpversioning.web.content.ContentVersioningControllerIntegrationTest
Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@19f19652]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@5667e6cb]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder activate
INFO: Activating simple JNDI environment

[INFO] Running org.entando.entando.jpversioning.web.content.ContentVersioningControllerTest
Dec 10, 2020 9:10:00 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:00 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:00 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 1 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@70843e3c
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@6c660c2d
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:01 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:01 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@246bf677
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:02 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@4c1009e9
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.005 s - in org.entando.entando.jpversioning.web.content.ContentVersioningControllerTest
[INFO] Running org.entando.entando.jpversioning.web.configuration.VersioningConfigurationControllerIntegrationTest

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/configuration
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.configuration.VersioningConfigurationController
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.plugins.jpversioning.web.configuration.model.VersioningConfigurationDTO> org.entando.entando.plugins.jpversioning.web.configuration.VersioningConfigurationController.getVersioningConfiguration()

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"deleteMidVersions":true,"contentsToIgnore":["TST1","TST2"],"contentTypesToIgnore":["CT1","CT2"]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = PUT
      Request URI = /plugins/versioning/configuration
       Parameters = {}
          Headers = [Content-Type:"application/json", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.configuration.VersioningConfigurationController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.plugins.jpversioning.web.configuration.model.VersioningConfigurationDTO> org.entando.entando.plugins.jpversioning.web.configuration.VersioningConfigurationController.putVersioningConfiguration(org.entando.entando.plugins.jpversioning.web.configuration.model.VersioningConfigurationDTO)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"deleteMidVersions":true,"contentsToIgnore":["TST1"],"contentTypesToIgnore":["CT1"]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.158 s - in org.entando.entando.jpversioning.web.configuration.VersioningConfigurationControllerIntegrationTest
Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/portDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logActiveFileOutput] = [*****]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestServ;create=true]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/servDataSourceClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFilesCount] = [10]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/applicationBaseURL] = [/Entando/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.password] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logLevel] = [ERROR]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/indexDiskRootFolder] = [target/test/indexdir]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileSize] = [1048576]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceDiskRootFolder] = [target/test/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceRootURL] = [/Entando/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/resourceRootURL] = [/Entando/resources/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/configVersion] = [test]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.beanName] = [servDataSource]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.url] = [jdbc:derby:/workspace/source/target/test/db/entando-plugin-jpversioningtestPort;create=true]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/protectedResourceDiskRootFolder] = [target/test/protected/]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.beanName] = [portDataSource]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.password] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.driverClassName] = [org.apache.derby.jdbc.EmbeddedDriver]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.portDb.username] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc.servDb.username] = [agile]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logName] = [/workspace/source/target/test/entando-plugin-jpversioning]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/logFileRotatePattern] = [/workspace/source/target/test/entando-plugin-jpversioning_logs/entando-plugin-jpversioning-%i.log.gz]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/servDataSource] = [org.apache.commons.dbcp2.BasicDataSource@62e8415b]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder bind
INFO: Static JNDI binding: [java:comp/env/jdbc/portDataSource] = [org.apache.commons.dbcp2.BasicDataSource@399ae5cc]

Dec 10, 2020 9:10:02 PM org.springframework.mock.jndi.SimpleNamingContextBuilder activate
INFO: Activating simple JNDI environment

[INFO] Running org.entando.entando.jpversioning.web.configuration.VersioningConfigurationControllerTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.304 s - in org.entando.entando.jpversioning.web.configuration.VersioningConfigurationControllerTest
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:02 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@45e0289e
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
Dec 10, 2020 9:10:02 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@5b31b82b
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 1 ms
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 0 ms
[INFO] Running org.entando.entando.jpversioning.web.resource.ResourceVersioningControllerIntegrationTest

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"66","type":"file","name":"","description":"configurazione","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"55 Kb","path":"protected/trashed/66/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"230","correlationCode":"230","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:02Z","updatedAt":"2020-12-10T09:10:02Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
Dec 10, 2020 9:10:02 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:02 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
Dec 10, 2020 9:10:02 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 66
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"230","correlationCode":"230","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:02Z","updatedAt":"2020-12-10T09:10:02Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/230
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"230","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/230/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/230/0
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Disposition:"attachment; filename=file_test.jpeg", Content-Type:"application/pdf", Content-Length:"2324", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/pdf
             Body = a;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371x
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/230/1
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 230
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 230
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 230
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 230
Dec 10, 2020 9:10:03 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:03 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:03 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Disposition:"attachment; filename=file_test.jpeg", Content-Type:"application/pdf", Content-Length:"2324", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/pdf
             Body = a;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371x
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/230/30
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Disposition:"attachment; filename=file_test.jpeg", Content-Type:"application/pdf", Content-Length:"2324", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/pdf
             Body = a;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371x
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/-1/0
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = org.entando.entando.aps.******.exception.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":[],"errors":[{"code":"3","message":"a Trashed resource:  with -1 code could not be found"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"82","correlationCode":null,"type":"image","name":"entando.jpg","description":"Entando","createdAt":"2011-04-25T12:10:00Z","updatedAt":"2014-11-25T07:20:00Z","group":"customers","categories":[],"owner":"*****","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/protected/82/0/def/","size":"9 Kb"},{"dimensions":"90x90 px","path":"/Entando/protected/82/1/def/","size":"1 Kb"},{"dimensions":"130x130 px","path":"/Entando/protected/82/2/def/","size":"2 Kb"},{"dimensions":"150x150 px","path":"/Entando/protected/82/3/def/","size":"2 Kb"}],"metadata":{}},{"id":"22","correlationCode":"another_code","type":"image","name":"entandoTeam.jpg","description":"Entando Team","createdAt":"2008-12-25T12:00:00Z","updatedAt":"2018-12-25T09:00:00Z","group":"free","categories":[],"owner":"rocky","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/entandoTeam_d0.jpg","size":"9 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/entandoTeam_d1.jpg","size":"1 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/entandoTeam_d2.jpg","size":"2 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/entandoTeam_d3.jpg","size":"2 Kb"}],"metadata":{}},{"id":"44","correlationCode":"a_code","type":"image","name":"lvback.jpg","description":"logo","createdAt":"2010-05-25T12:00:00Z","updatedAt":"2014-11-25T06:40:00Z","group":"free","categories":["resCat1","resCat3"],"owner":"*****","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/lvback_d0.jpg","size":"7 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/lvback_d1.jpg","size":"2 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/lvback_d2.jpg","size":"4 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/lvback_d3.jpg","size":"4 Kb"}],"metadata":{"Resolution Units":"none","Number of Tables":"4 Huffman tables","Detected File Type Long Name":"Joint Photographic Experts Group","File Modified Date":"lun ago 27 13:07:38 +02:00 2018","Compression Type":"Baseline","Data Precision":"8 bits","Detected MIME Type":"image/jpeg","Expected File Name Extension":"jpg","Number of Components":"3","Component 2":"Cb component: Quantization table 1, Sampling factors 1 horiz/1 vert","Thumbnail Height Pi**ls":"0","Component 1":"Y component: Quantization table 0, Sampling factors 2 horiz/2 vert","Image Height":"238 pi**ls","Thumbnail Width Pi**ls":"0","X Resolution":"1 dot","Image Width":"320 pi**ls","File Size":"10657 bytes","Component 3":"Cr component: Quantization table 1, Sampling factors 1 horiz/1 vert","Version":"1.1","Detected File Type Name":"JPEG","JPEG Comment":"CREATOR: gd-jpeg v1.0 (using IJG JPEG v62), default quality","File Name":"upload_3a5c973a_7d54_41f8_a8b5_b9d2dfc374fc_00000006.tmp","Y Resolution":"1 dot"}}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/82
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 67
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 68
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 82
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 22
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 44
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 69
Dec 10, 2020 9:10:03 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 70
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/22
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/44
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
             Body = {"payload":[{"id":"67","type":"image","name":"","description":"219","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/67/1","size":"2 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/67/2","size":"4 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/67/3","size":"4 Kb"}]},{"id":"68","type":"image","name":"","description":"220","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/68/1","size":"2 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/68/2","size":"3 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/68/3","size":"3 Kb"}]},{"id":"82","type":"image","name":"entando.jpg","description":"Entando","createdAt":null,"updatedAt":null,"group":"customers","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/82/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/82/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/82/3","size":"2 Kb"}]},{"id":"22","type":"image","name":"entandoTeam.jpg","description":"Entando Team","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/22/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/22/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/22/3","size":"2 Kb"}]},{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"44","type":"image","name":"lvback.jpg","description":"logo","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1","resCat3"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/44/1","size":"2 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/44/2","size":"4 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/44/3","size":"4 Kb"}]},{"id":"69","type":"image","name":"","description":"qqq","createdAt":null,"updatedAt":null,"group":"customers","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/69/1","size":"2 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/69/2","size":"4 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/69/3","size":"4 Kb"}]},{"id":"70","type":"image","name":"","description":"tux","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/70/1","size":"5 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/70/2","size":"5 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/70/3","size":"5 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":8,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"231","correlationCode":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:04Z","updatedAt":"2020-12-10T09:10:04Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/231
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"232","correlationCode":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:04Z","updatedAt":"2020-12-10T09:10:04Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/232
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"233","correlationCode":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:04Z","updatedAt":"2020-12-10T09:10:04Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/233
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"234","correlationCode":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:04Z","updatedAt":"2020-12-10T09:10:04Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/234
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
Dec 10, 2020 9:10:04 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/234/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/234/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/234/3","size":"1 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":5,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 235
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"235","correlationCode":"235","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:04Z","updatedAt":"2020-12-10T09:10:04Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/235
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
INFO: loaded trashed resource 235
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"235","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/235/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/235/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/235/3","size":"1 Kb"}]},{"id":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/234/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/234/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/234/3","size":"1 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"235","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/235/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/235/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/235/3","size":"1 Kb"}]},{"id":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/234/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/234/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/234/3","size":"1 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {pageSize=[4], page=[1], resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 235
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 235
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
Dec 10, 2020 9:10:05 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:05 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:05 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 2 ms
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 230
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"235","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/235/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/235/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/235/3","size":"1 Kb"}]},{"id":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/234/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/234/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/234/3","size":"1 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":4,"lastPage":2,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {pageSize=[4], page=[2], resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":2,"pageSize":4,"lastPage":2,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 236
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 236
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 236
Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"230","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/230/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"236","correlationCode":"236","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:05Z","updatedAt":"2020-12-10T09:10:05Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"236","correlationCode":"236","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:05Z","updatedAt":"2020-12-10T09:10:05Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/236
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"236","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/236/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/versioning/resources/236/recover
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.recoverResource(java.lang.String)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"236","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/236/0"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"236","correlationCode":null,"type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:05Z","updatedAt":"2020-12-10T09:10:05Z","group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/236
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:05 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:05 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:05 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger warn
WARNING: User jack_bauer needs at least one of the required permissions [Ljava.lang.String;@2cf398a3

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = org.entando.entando.web.common.exceptions.EntandoAuthorizationException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":[],"errors":[{"code":"120","message":"jack_bauer is not allowed to /plugins/versioning/resources [GET]"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 235
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:05 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:05 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:05 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"235","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/235/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/235/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/235/3","size":"1 Kb"}]},{"id":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/234/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/234/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/234/3","size":"1 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
Dec 10, 2020 9:10:05 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 236
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"236","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/236/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"237","correlationCode":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:05Z","updatedAt":"2020-12-10T09:10:05Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/237
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
             Body = {"payload":[{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"238","correlationCode":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:06Z","updatedAt":"2020-12-10T09:10:06Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/238
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"239","correlationCode":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:06Z","updatedAt":"2020-12-10T09:10:06Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/239
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"},{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 241
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 242
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 241
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 242
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 241
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"240","correlationCode":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:06Z","updatedAt":"2020-12-10T09:10:06Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/240
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/240/0"},{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"},{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"241","correlationCode":"241","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:06Z","updatedAt":"2020-12-10T09:10:06Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/241
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"241","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/241/0"},{"id":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/240/0"},{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"},{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":5,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"242","correlationCode":"242","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:06Z","updatedAt":"2020-12-10T09:10:06Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/242
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 242
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 241
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 242
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 241
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237
Dec 10, 2020 9:10:06 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:06 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:06 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 235
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 234
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 233
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 232
Dec 10, 2020 9:10:06 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 231
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"242","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/242/0"},{"id":"241","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/241/0"},{"id":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/240/0"},{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"},{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"242","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/242/0"},{"id":"241","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/241/0"},{"id":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/240/0"},{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"},{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {pageSize=[4], page=[1], resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"242","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/242/0"},{"id":"241","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/241/0"},{"id":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/240/0"},{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"}],"metaData":{"page":1,"pageSize":4,"lastPage":2,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {pageSize=[4], page=[2], resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":2,"pageSize":4,"lastPage":2,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"235","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/235/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/235/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/235/3","size":"1 Kb"}]},{"id":"234","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/234/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/234/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/234/3","size":"1 Kb"}]},{"id":"233","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/233/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/233/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/233/3","size":"1 Kb"}]},{"id":"232","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/232/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/232/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/232/3","size":"1 Kb"}]},{"id":"231","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/231/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/231/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/231/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"243","correlationCode":"243","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:07Z","updatedAt":"2020-12-10T09:10:07Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"243","correlationCode":"243","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:07Z","updatedAt":"2020-12-10T09:10:07Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/243
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 243
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"243","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/243/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/243/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/243/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/versioning/resources/243
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 243
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.deleteTrashedResource(java.lang.String)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"243","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/243/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/243/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/243/3","size":"1 Kb"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:07 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:07 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:07 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 5 ms

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 242
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 241
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 240
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 239
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 238
Dec 10, 2020 9:10:07 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 237

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"242","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/242/0"},{"id":"241","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/241/0"},{"id":"240","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/240/0"},{"id":"239","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/239/0"},{"id":"238","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/238/0"},{"id":"237","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/237/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":6,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"244","correlationCode":"244","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:07Z","updatedAt":"2020-12-10T09:10:07Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"244","correlationCode":"244","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:07Z","updatedAt":"2020-12-10T09:10:07Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":4,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/244
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"244","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/244/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/versioning/resources/244
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.deleteTrashedResource(java.lang.String)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"244","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/244/0"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 244
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 244
FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:08 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:08 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:08 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 5 ms
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"245","correlationCode":"245","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:08Z","updatedAt":"2020-12-10T09:10:08Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"245","correlationCode":"245","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:08Z","updatedAt":"2020-12-10T09:10:08Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/245
       Parameters = {}
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 245
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 245
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"245","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/245/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/245/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/245/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/245/0
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Disposition:"attachment; filename=image_test_d0.jpeg", Content-Type:"application/jpeg", Content-Length:"2324", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/jpeg
             Body = a;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371xa;lsdka;lsdka;lsdka;lsdk;alskd;laskd;aslkd;alsdk;alskda;lskldaskl;sdjodpasu0i9728938701o7i186r890347974209817409823740bgbdf98dw787012378b1789b13281328701b39871029371x
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 245

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/245/1
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Disposition:"attachment; filename=image_test_d1.jpeg", Content-Type:"image/jpeg", Content-Length:"771", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = image/jpeg
             Body = ÿØÿà JFIF      ÿÛ C 		
 $.' ",#(7),01444'9=82<.342ÿÛ C			2!!22222222222222222222222222222222222222222222222222ÿÀ  Z Z" ÿÄ           	
ÿÄ µ   } !1AQa"q2¡#B±ÁRÑð$3br	
%&'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz¢£¤¥¦§¨©ª²³´µ¶·¸¹ºÂÃÄÅÆÇÈÉÊÒÓÔÕÖ×ØÙÚáâãäåæçèéêñòóôõö÷øùúÿÄ        	
ÿÄ µ  w !1AQaq"2B¡±Á	#3RðbrÑ
$4á%ñ&'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz¢£¤¥¦§¨©ª²³´µ¶·¸¹ºÂÃÄÅÆÇÈÉÊÒÓÔÕÖ×ØÙÚâãäåæçèéêòóôõö÷øùúÿÚ   ? ùþ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ÿÙ
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources/-1/0
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
Dec 10, 2020 9:10:08 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:08 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:08 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 245
           Method = public org.springframework.http.ResponseEntity org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.getTrashedResource(java.lang.String,java.lang.Integer)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = org.entando.entando.aps.******.exception.ResourceNotFoundException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 404
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":[],"errors":[{"code":"3","message":"a Trashed resource:  with -1 code could not be found"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"245","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/245/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/245/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/245/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"246","correlationCode":"246","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:08Z","updatedAt":"2020-12-10T09:10:08Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/246
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 246
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:08 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 246
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"246","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/246/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/246/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/246/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
Dec 10, 2020 9:10:08 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:08 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:08 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 4 ms
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"246","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/246/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/246/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/246/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 247
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"247","correlationCode":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:08Z","updatedAt":"2020-12-10T09:10:08Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/247
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/247/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"248","correlationCode":"248","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:09Z","updatedAt":"2020-12-10T09:10:09Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/248
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 248
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 247
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 249
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 248
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 247
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 249
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 248
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 247
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 249
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 248
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 247
Dec 10, 2020 9:10:09 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:09 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:09 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 246
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"248","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/248/0"},{"id":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/247/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"249","correlationCode":"249","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:09Z","updatedAt":"2020-12-10T09:10:09Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/249
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"249","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/249/0"},{"id":"248","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/248/0"},{"id":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/247/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"249","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/249/0"},{"id":"248","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/248/0"},{"id":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/247/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {filters[0].value=[file_test.jpeg], resourceTypeCode=[Attach], filters[0].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"249","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/249/0"},{"id":"248","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/248/0"},{"id":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/247/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"code","direction":"ASC","filters":[{"attribute":"description","entityAttr":null,"operator":"like","value":"file_test.jpeg","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {filters[0].value=[wrong description], resourceTypeCode=[Attach], filters[0].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[{"attribute":"description","entityAttr":null,"operator":"like","value":"wrong description","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"246","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/246/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/246/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/246/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"250","correlationCode":"250","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:09Z","updatedAt":"2020-12-10T09:10:09Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/250
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 250
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 250
Dec 10, 2020 9:10:09 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 250
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"250","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/250/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/250/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/250/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"250","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/250/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/250/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/250/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {filters[0].value=[image_test.jpeg], resourceTypeCode=[Image], filters[0].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"250","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/250/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/250/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/250/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[{"attribute":"description","entityAttr":null,"operator":"like","value":"image_test.jpeg","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {filters[0].value=[wrong description], resourceTypeCode=[Image], filters[0].attribute=[description]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[{"attribute":"description","entityAttr":null,"operator":"like","value":"wrong description","allowedValues":null}],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:09 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:09 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:09 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
Dec 10, 2020 9:10:10 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:10 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 250
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"250","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/250/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/250/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/250/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
Dec 10, 2020 9:10:10 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"image","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
Dec 10, 2020 9:10:10 PM org.entando.entando.ent.util.EntLogging$EntLogger error
SEVERE: Error reading image metadata for file image_test_d0.jpeg
             Body = {"payload":{"id":"251","correlationCode":"251","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:10Z","updatedAt":"2020-12-10T09:10:10Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}},"metaData":{},"errors":[]}
Dec 10, 2020 9:10:10 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"251","correlationCode":"251","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":"2020-12-10T09:10:10Z","updatedAt":"2020-12-10T09:10:10Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"versions":[{"dimensions":null,"path":"/Entando/resources/cms/images/image_test_d0.jpeg","size":"2 Kb"},{"dimensions":"90x90 px","path":"/Entando/resources/cms/images/image_test_d1.jpeg","size":"0 Kb"},{"dimensions":"130x130 px","path":"/Entando/resources/cms/images/image_test_d2.jpeg","size":"0 Kb"},{"dimensions":"150x150 px","path":"/Entando/resources/cms/images/image_test_d3.jpeg","size":"1 Kb"}],"metadata":{}}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/251
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]},{"id":"251","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/251/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/251/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/251/3","size":"1 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":2,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 251
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 251
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 71
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/versioning/resources/251
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.deleteTrashedResource(java.lang.String)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"id":"251","type":"image","name":"image_test.jpeg","description":"image_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/251/1","size":"0 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/251/2","size":"0 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/251/3","size":"1 Kb"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"398","type":"image","name":"","description":"Logo jAPS","createdAt":null,"updatedAt":null,"group":"free","categories":["resCat1"],"owner":null,"folderPath":null,"versions":[{"dimensions":"90x90 px","path":"protected/trashed/398/1","size":"1 Kb"},{"dimensions":"130x130 px","path":"protected/trashed/398/2","size":"2 Kb"},{"dimensions":"150x150 px","path":"protected/trashed/398/3","size":"2 Kb"}]}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[image]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)
Dec 10, 2020 9:10:11 PM org.springframework.mock.web.MockServletContext log
INFO: Initializing Spring TestDispatcherServlet ''
Dec 10, 2020 9:10:11 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Initializing Servlet ''
Dec 10, 2020 9:10:11 PM org.springframework.web.servlet.FrameworkServlet initServletBean
INFO: Completed initialization in 3 ms
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 249
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 248
Dec 10, 2020 9:10:11 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 247

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/cms/assets
       Parameters = {type=[file]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.listAssets(org.entando.entando.plugins.jacms.web.resource.request.ListResourceRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"7","correlationCode":null,"type":"file","name":"configurazione.txt","description":"configurazione","createdAt":"2010-08-25T10:12:00Z","updatedAt":"2012-07-25T12:10:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/configurazione.txt"},{"id":"8","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"customers","categories":["resCat2"],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/protected/8/1/def/"},{"id":"6","correlationCode":null,"type":"file","name":"text_resource.txt","description":"Text resource","createdAt":"2008-09-25T12:00:00Z","updatedAt":"2013-09-10T12:00:00Z","group":"free","categories":[],"owner":"*****","folderPath":null,"size":"55 Kb","path":"/Entando/resources/cms/documents/text_resource.txt"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"name","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"249","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/249/0"},{"id":"248","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/248/0"},{"id":"247","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/247/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":3,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /plugins/cms/assets
       Parameters = {metadata=[{"correlationCode":null,"type":"file","group":"free","folderPath":null,"categories":null}]}
          Headers = [Content-Type:"multipart/form-data", Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<org.entando.entando.plugins.jacms.web.resource.model.AssetDto>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.createAsset(java.lang.String,org.springframework.web.multipart.MultipartFile) throws com.fasterxml.jackson.core.JsonProcessingException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{"id":"252","correlationCode":"252","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":"2020-12-10T09:10:12Z","updatedAt":"2020-12-10T09:10:12Z","group":"free","categories":[],"owner":"jack_bauer","folderPath":null,"size":"2 Kb","path":"/Entando/resources/cms/documents/file_test.jpeg"},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

Dec 10, 2020 9:10:12 PM org.entando.entando.ent.util.EntLogging$EntLogger info
INFO: loaded trashed resource 252
MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":0,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /plugins/cms/assets/252
       Parameters = {}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jacms.web.resource.ResourcesController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.SimpleRestResponse<java.util.Map<java.lang.String, java.lang.String>>> org.entando.entando.plugins.jacms.web.resource.ResourcesController.deleteAsset(org.entando.entando.web.common.model.RestNamedId) throws org.entando.entando.ent.exception.EntException

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":{},"metaData":{},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /plugins/versioning/resources
       Parameters = {resourceTypeCode=[Attach]}
          Headers = [Authorization:"Bearer valid_token"]
             Body = <no character encoding set>
    Session Attrs = {currentUser=jack_bauer, user=jack_bauer}

Handler:
             Type = org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController
           Method = public org.springframework.http.ResponseEntity<org.entando.entando.web.common.model.PagedRestResponse<org.entando.entando.plugins.jpversioning.web.resource.model.ResourceDTO>> org.entando.entando.plugins.jpversioning.web.resource.ResourceVersioningController.listTrashedResources(java.lang.String,org.entando.entando.web.common.model.RestListRequest)

Async:
    Async started = *****
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"SAMEORIGIN"]
     Content type = application/json;charset=UTF-8
             Body = {"payload":[{"id":"252","type":"file","name":"file_test.jpeg","description":"file_test.jpeg","createdAt":null,"updatedAt":null,"group":"free","categories":[],"owner":null,"folderPath":null,"size":"2 Kb","path":"protected/trashed/252/0"}],"metaData":{"page":1,"pageSize":100,"lastPage":1,"totalItems":1,"sort":"code","direction":"ASC","filters":[],"additionalParams":{}},"errors":[]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.492 s - in org.entando.entando.jpversioning.web.resource.ResourceVersioningControllerIntegrationTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 80, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- maven-war-plugin:2.1.1:war (default-war) @ entando-plugin-jpversioning ---
[INFO] Packaging webapp
[INFO] Assembling webapp [entando-plugin-jpversioning] in [/workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1]
[INFO] Processing war project
[INFO] Copying webapp resources [/workspace/source/src/main/webapp]
[INFO] Building jar: /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1/WEB-INF/lib/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1.jar
[INFO] Webapp assembled in [1437 msecs]
[INFO] Building war: /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1.war
[INFO] 
[INFO] --- maven-assembly-plugin:2.2.1:single (package-classes) @ entando-plugin-jpversioning ---
[INFO] Reading assembly descriptor: /workspace/source/src/main/assembly/classes.xml
[INFO] Building jar: /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1-classes.jar
[INFO] 
[INFO] --- maven-jar-plugin:3.2.0:test-jar (build-test-jar) @ entando-plugin-jpversioning ---
[INFO] Building jar: /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1-tests.jar
[INFO] 
[INFO] --- maven-surefire-report-plugin:3.0.0-M4:failsafe-report-only (integration-tests) @ entando-plugin-jpversioning ---
[INFO] 
[INFO] --- dependency-check-maven:5.3.2:aggregate (default) @ entando-plugin-jpversioning ---
[INFO] 

Dependency-Check is an open source tool performing a best effort analysis of 3rd party dependencies; ***** positives and ***** negatives may exist in the analysis performed by the tool. Use of the tool and the reporting provided constitutes acceptance for use in an AS IS condition, and there are NO warranties, implied or otherwise, with regard to the analysis or its use. Any use of the tool and the reporting provided is at the user’s risk. In no event shall the copyright holder or OWASP be held liable for any damages whatsoever arising out of or in connection with the use of this tool, the analysis performed, or the resulting report.


[INFO] Analysis Started
[INFO] Finished Archive Analyzer (3 seconds)
[INFO] Finished File Name Analyzer (0 seconds)
[INFO] Finished Jar Analyzer (4 seconds)
[ERROR] ----------------------------------------------------
[ERROR] .NET Assembly Analyzer could not be initialized and at least one 'e**' or 'dll' was scanned. The 'dotnet' e**cutable could not be found on the path; either disable the Assembly Analyzer or add the path to dotnet core in the configuration.
[ERROR] ----------------------------------------------------
[INFO] Finished Dependency Merging Analyzer (0 seconds)
[INFO] Finished Version Filter Analyzer (0 seconds)
[INFO] Finished Hint Analyzer (0 seconds)
[INFO] Created CPE Index (4 seconds)
[INFO] Finished CPE Analyzer (13 seconds)
[INFO] Finished False Positive Analyzer (0 seconds)
[INFO] Finished NVD CVE Analyzer (0 seconds)
[INFO] Finished Sonatype OSS Index Analyzer (5 seconds)
[INFO] Finished Vulnerability Suppression Analyzer (1 seconds)
[INFO] Finished Dependency Bundling Analyzer (0 seconds)
[INFO] Analysis Complete (31 seconds)
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.5:report (report) @ entando-plugin-jpversioning ---
[INFO] Loading e**cution data file /workspace/source/target/jacoco.e**c
[INFO] Analyzed bundle 'Entando Plugin: Content Versioning' with 30 classes
[INFO] 
[INFO] --- maven-surefire-report-plugin:3.0.0-M4:report-only (unit-tests) @ entando-plugin-jpversioning ---
[WARNING] Unable to locate Test Source XRef to link to - DISABLED
[INFO] 
[INFO] --- maven-install-plugin:2.4:install (default-install) @ entando-plugin-jpversioning ---
[INFO] Installing /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1.war to /home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jpversioning/0.0.0-SNAPSHOT-PR-13-1/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1.war
[INFO] Installing /workspace/source/pom.xml to /home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jpversioning/0.0.0-SNAPSHOT-PR-13-1/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1.pom
[INFO] Installing /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1-classes.jar to /home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jpversioning/0.0.0-SNAPSHOT-PR-13-1/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1-classes.jar
[INFO] Installing /workspace/source/target/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1-tests.jar to /home/jenkins/.mvnrepository/org/entando/entando/plugins/entando-plugin-jpversioning/0.0.0-SNAPSHOT-PR-13-1/entando-plugin-jpversioning-0.0.0-SNAPSHOT-PR-13-1-tests.jar
[INFO] 
[INFO] ------< org.entando.entando.plugins:entando-plugin-jpversioning >-------
[INFO] Building Entando Plugin: Content Versioning 0.0.0-SNAPSHOT-PR-13-1
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- sonar-maven-plugin:3.7.0.1746:sonar (default-cli) @ entando-plugin-jpversioning ---
[INFO] User cache: /****/.sonar/cache
[INFO] SonarQube version: 8.5.0
[INFO] Default locale: "en_US", source code encoding: "UTF-8"
[INFO] Load global settings
[INFO] Load global settings (done) | time=346ms
[INFO] Server id: 1BD809FA-AWHW8ct9-T_TB3XqouNu
[INFO] User cache: /****/.sonar/cache
[INFO] Load/download plugins
[INFO] Load plugins index
[INFO] Load plugins index (done) | time=75ms
[INFO] Load/download plugins (done) | time=30159ms
[INFO] Loaded core extensions: developer-scanner
[INFO] JavaScript/TypeScript frontend is enabled
[INFO] Load project settings for component key: 'entando_entando-plugin-jpversioning'
[INFO] Load project settings for component key: 'entando_entando-plugin-jpversioning' (done) | time=35ms
[INFO] Process project properties
[INFO] E**cute project builders
[INFO] E**cute project builders (done) | time=2ms
[INFO] Project key: entando_entando-plugin-jpversioning
[INFO] Base dir: /workspace/source
[INFO] Working dir: /workspace/source/target/sonar
[INFO] Load project branches
[INFO] Load project branches (done) | time=34ms
[INFO] Check ALM binding of project 'entando_entando-plugin-jpversioning'
[INFO] Detected project binding: NOT_BOUND
[INFO] Check ALM binding of project 'entando_entando-plugin-jpversioning' (done) | time=26ms
[INFO] Load project pull requests
[INFO] Load project pull requests (done) | time=34ms
[INFO] Load branch configuration
[INFO] Load branch configuration (done) | time=5ms
[INFO] Load quality profiles
[INFO] Load quality profiles (done) | time=116ms
[INFO] Load active rules
[INFO] Load active rules (done) | time=1432ms
[INFO] Organization key: entando
[INFO] Pull request 13 for merge into master from PR-13
[INFO] SCM collecting changed files in the branch
[WARNING] Exception caught during e**cution of command '[/usr/local/git/bin/git, config, --******, --edit]' in '/usr/local/git/bin', return code '128', error message 'fatal: Invalid path '/usr/local/git/etc': No such file or directory
'
[INFO] SCM collecting changed files in the branch (done) | time=707ms
[INFO] Indexing files...
[INFO] Project configuration:
[INFO] 102 files inde**d
[INFO] 0 files ignored because of scm ignore settings
[INFO] Quality profile for java: Sonar way
[INFO] Quality profile for jsp: Sonar way
[INFO] Quality profile for xml: Sonar way
[INFO] ------------- Run sensors on module Entando Plugin: Content Versioning
[INFO] JavaScript/TypeScript frontend is enabled
[INFO] Load metrics repository
[INFO] Load metrics repository (done) | time=220ms
[INFO] Sensor JavaSquidSensor [java]
[INFO] Configured Java source version (sonar.java.source): 8
[INFO] JavaClasspath initialization
[INFO] JavaClasspath initialization (done) | time=17ms
[INFO] JavaTestClasspath initialization
[INFO] JavaTestClasspath initialization (done) | time=5ms
Dec 10, 2020 9:11:52 PM org.apache.jasper.servlet.TldScanner scanJars
INFO: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
[WARNING] Some JSP pages failed to transpile. Enable debug log for details.
[INFO] Java Main Files AST scan
[INFO] 36 source files to be analyzed
[INFO] 4/36 files analyzed, current file: src/main/java/org/entando/entando/plugins/jpversioning/web/content/validator/ContentVersioningValidator.java
[INFO] 26/36 files analyzed, current file: src/main/java/com/agiletec/plugins/jpversioning/aps*****/resource/TrashedResourceAction.java
[INFO] 36/36 source files have been analyzed
[INFO] Java Main Files AST scan (done) | time=21642ms
[INFO] Java Test Files AST scan
[INFO] 21 source files to be analyzed
[INFO] Java Test Files AST scan (done) | time=5737ms
[INFO] Java Generated Files AST scan
[INFO] 9 source files to be analyzed
[INFO] 21/21 source files have been analyzed
[INFO] 9/9 source files have been analyzed
[INFO] Java Generated Files AST scan (done) | time=4817ms
[INFO] Sensor JavaSquidSensor [java] (done) | time=39098ms
[INFO] Sensor SonarCSS Rules [cssfamily]
[INFO] No CSS, PHP, HTML or VueJS files are found in the project. CSS analysis is skipped.
[INFO] Sensor SonarCSS Rules [cssfamily] (done) | time=3ms
[INFO] Sensor C# Properties [csharp]
[INFO] Sensor C# Properties [csharp] (done) | time=2ms
[INFO] Sensor Import of Checkstyle issues [java]
[WARNING] Checkstyle report not found: /workspace/source/target/checkstyle-result.xml
[INFO] Sensor Import of Checkstyle issues [java] (done) | time=4ms
[INFO] Sensor SurefireSensor [java]
[INFO] parsing [/workspace/source/target/surefire-reports]
[INFO] Sensor SurefireSensor [java] (done) | time=146ms
[INFO] Sensor JavaXmlSensor [java]
[INFO] 6 source files to be analyzed
[INFO] Sensor JavaXmlSensor [java] (done) | time=249ms
[INFO] Sensor HTML [web]
[INFO] 6/6 source files have been analyzed
[INFO] Sensor HTML [web] (done) | time=891ms
[INFO] Sensor XML Sensor [xml]
[INFO] 6 source files to be analyzed
[INFO] Sensor XML Sensor [xml] (done) | time=347ms
[INFO] Sensor VB.NET Properties [vbnet]
[INFO] Sensor VB.NET Properties [vbnet] (done) | time=2ms
[INFO] Sensor JaCoCo XML Report Importer [jacoco]
[INFO] 6/6 source files have been analyzed
[INFO] Importing 1 report(s). Turn your logs in debug mode in order to see the exhaustive list.
[INFO] Sensor JaCoCo XML Report Importer [jacoco] (done) | time=236ms
[INFO] Sensor ThymeLeaf template sensor [securityjavafrontend]
[INFO] Sensor ThymeLeaf template sensor [securityjavafrontend] (done) | time=7ms
[INFO] Sensor JavaSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/java
[INFO] Read 290 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/java
[INFO] 21:12:33.301804 Building Type propagation graph
[INFO] 21:12:33.420917 Running Tarjan on 6065 nodes
[INFO] 21:12:33.442317 Tarjan found 6065 components
[INFO] 21:12:33.468987 Variable type analysis: done
[INFO] 21:12:33.476906 Building Type propagation graph
[INFO] 21:12:33.574139 Running Tarjan on 6065 nodes
[INFO] 21:12:33.585545 Tarjan found 6065 components
[INFO] 21:12:33.605871 Variable type analysis: done
[INFO] Analyzing 871 ucfgs to detect vulnerabilities.
[INFO] All rules entrypoints : 0 Retained UCFGs : 0
[INFO] rule: S5131, entrypoints: 0
[INFO] rule: S5131 done
[INFO] rule: S3649, entrypoints: 0
[INFO] rule: S3649 done
[INFO] rule: S2076, entrypoints: 0
[INFO] rule: S2076 done
[INFO] rule: S2091, entrypoints: 0
[INFO] rule: S2091 done
[INFO] rule: S2078, entrypoints: 0
[INFO] rule: S2078 done
[INFO] rule: S2631, entrypoints: 0
[INFO] rule: S2631 done
[INFO] rule: S5135, entrypoints: 0
[INFO] rule: S5135 done
[INFO] rule: S2083, entrypoints: 0
[INFO] rule: S2083 done
[INFO] rule: S5167, entrypoints: 0
[INFO] rule: S5167 done
[INFO] rule: S5144, entrypoints: 0
[INFO] rule: S5144 done
[INFO] rule: S5145, entrypoints: 0
[INFO] rule: S5145 done
[INFO] rule: S5146, entrypoints: 0
[INFO] rule: S5146 done
[INFO] rule: S5334, entrypoints: 0
[INFO] rule: S5334 done
[INFO] Sensor JavaSecuritySensor [security] (done) | time=9803ms
[INFO] Sensor CSharpSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/ucfg_cs2
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/ucfg_cs2
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor CSharpSecuritySensor [security] (done) | time=1ms
[INFO] Sensor PhpSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/php
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/php
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor PhpSecuritySensor [security] (done) | time=1ms
[INFO] Sensor PythonSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/python
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/python
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor PythonSecuritySensor [security] (done) | time=1ms
[INFO] Sensor JsSecuritySensor [security]
[INFO] Reading type hierarchy from: /workspace/source/target/sonar/ucfg2/js
[INFO] Read 0 type definitions
[INFO] Reading UCFGs from: /workspace/source/target/sonar/ucfg2/js
[INFO] No UCFGs have been included for analysis.
[INFO] Sensor JsSecuritySensor [security] (done) | time=1ms
[INFO] ------------- Run sensors on project
[INFO] Sensor Zero Coverage Sensor
[INFO] Sensor Zero Coverage Sensor (done) | time=1ms
[INFO] Sensor Java CPD Block Inde**r
[INFO] Sensor Java CPD Block Inde**r (done) | time=125ms
[INFO] SCM Publisher SCM provider for this project is: git
[INFO] SCM Publisher 1 source file to be analyzed
[INFO] SCM Publisher 0/1 source files have been analyzed (done) | time=124ms
[WARNING] Missing blame information for the following files:
[WARNING]   * pom.xml
[WARNING] This may lead to missing/broken features in SonarCloud
[INFO] CPD E**cutor 6 files had no CPD blocks
[INFO] CPD E**cutor Calculating CPD for 44 files
[INFO] CPD E**cutor CPD calculation finished (done) | time=141ms
[INFO] SCM writing changed lines
[INFO] SCM writing changed lines (done) | time=54ms
[INFO] Analysis report generated in 310ms, dir size=243 KB
[INFO] Analysis report compressed in 143ms, zip size=93 KB
[INFO] Analysis report uploaded in 146ms
[INFO] ANALYSIS SUCCESSFUL, you can find the results at: https://sonarcloud.io/dashboard?id=entando_entando-plugin-jpversioning&pullRequest=13
[INFO] Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
[INFO] More about the report processing at https://sonarcloud.io/api/ce/task?id=AXZOf7wNDYu_gy0clfSN
[INFO] Analysis total time: 1:02.346 s
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  13:31 min
[INFO] Finished at: 2020-12-10T21:12:42Z
[INFO] ------------------------------------------------------------------------
Picked up _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx8000m
[INFO] Scanning for projects...
[INFO] 
[INFO] ------< org.entando.entando.plugins:entando-plugin-jpversioning >-------
[INFO] Building Entando Plugin: Content Versioning 0.0.0-SNAPSHOT-PR-13-1
[INFO] --------------------------------[ war ]---------------------------------
[WARNING] The POM for com.sun.xml.bind:jaxb-impl:jar:2.2.11 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[INFO] 
[INFO] --- maven-site-plugin:3.9.0:site (default-site) @ entando-plugin-jpversioning ---
[INFO] configuring report plugin org.apache.maven.plugins:maven-project-info-reports-plugin:3.0.0
[INFO] 9 reports configured for maven-project-info-reports-plugin:3.0.0: dependency-info, distribution-management, index, ci-management, issue-management, licenses, plugins, scm, summary
[INFO] Rendering site with default locale English (en)
[WARNING] Unable to find a URL to the parent project. The parent menu will NOT be added.
[INFO] Relativizing decoration links with respect to localized project URL: http://www.entando.com/
[INFO] Rendering content with org.apache.maven.skins:maven-default-skin:jar:1.3 skin.
[INFO] Generating "Dependency Information" report --- maven-project-info-reports-plugin:3.0.0:dependency-info
[INFO] Generating "About" report         --- maven-project-info-reports-plugin:3.0.0:index
[INFO] Generating "Issue Management" report --- maven-project-info-reports-plugin:3.0.0:issue-management
[INFO] Generating "Licenses" report      --- maven-project-info-reports-plugin:3.0.0:licenses
[INFO] Generating "Plugins" report       --- maven-project-info-reports-plugin:3.0.0:plugins
[INFO] Generating "Source Code Management" report --- maven-project-info-reports-plugin:3.0.0:scm
[INFO] Generating "Summary" report       --- maven-project-info-reports-plugin:3.0.0:summary
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  16.178 s
[INFO] Finished at: 2020-12-10T21:13:02Z
[INFO] ------------------------------------------------------------------------
shallow cloning https://github.com/entando-k8s/devops-results.git branch gh-pages
ran git init in /tmp/jenkins-x-collect809960526
ran git add remote origin https://github.com/entando-k8s/devops-results.git in /tmp/jenkins-x-collect809960526
ran git fetch origin --depth=1 gh-pages in dir /tmp/jenkins-x-collect809960526
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/maven-base.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/maven-theme.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/print.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/site.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-check-junit.xml
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-check-report.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-check-report.xml
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-info.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/collapsed.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/expanded.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/external.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_error_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_info_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_success_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_warning_sml.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/logos/build-by-maven-black.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/logos/build-by-maven-white.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/logos/maven-feather.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/newwindow.png
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/issue-management.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/VersioningProtectedResourceProvider.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/VersioningProtectedResourceProvider.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceDAO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceDAO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceManager.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceManager.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/ContentVersion.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/ContentVersion.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/IVersioningManager.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/IVersioningManager.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningDAO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningDAO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningManager.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningManager.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/VersioningConfigAction.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/VersioningConfigAction.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/ContentVersionsAction.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/ContentVersionsAction.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/TrashedResourceAction.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/TrashedResourceAction.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionAction.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionAction.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionFinderAction.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionFinderAction.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/branchfc.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/branchnc.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/branchpc.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/bundle.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/class.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/down.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/greenbar.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/group.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/method.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/package.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/prettify.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/prettify.js
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/redbar.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/report.css
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/report.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/session.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/sort.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/sort.js
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/source.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/up.gif
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-sessions.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco.csv
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco.xml
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/TrashedResource.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/TrashedResource.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/VersionedContent.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/VersionedContent.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/VersioningConfigurationService.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/VersioningConfigurationService.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/ContentVersioningService.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/ContentVersioningService.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/ResourcesVersioningService.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/ResourcesVersioningService.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/VersioningConfigurationController.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/VersioningConfigurationController.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/VersioningConfigurationDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/VersioningConfigurationDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/ContentVersioningController.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/ContentVersioningController.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/ContentVersionDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/ContentVersionDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/ContentVersioningValidator.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/ContentVersioningValidator.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/VersioningValidatorErrorCodes.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/VersioningValidatorErrorCodes.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/ResourceVersioningController.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/ResourceVersioningController.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/FileResourceDTO$FileResourceDTOBuilder.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/FileResourceDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/FileResourceDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageResourceDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageResourceDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageVersionDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageVersionDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDownloadDTO.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDownloadDTO.java.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/index.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/index.source.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/licenses.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/plugins.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/project-info.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/scm.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/summary.html
Publishing https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/surefire-report.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/maven-base.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/maven-theme.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/print.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/css/site.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-check-junit.xml
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-check-report.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-check-report.xml
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/dependency-info.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/collapsed.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/expanded.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/external.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_error_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_info_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_success_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/icon_warning_sml.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/logos/build-by-maven-black.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/logos/build-by-maven-white.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/logos/maven-feather.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/images/newwindow.png
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/issue-management.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/VersioningProtectedResourceProvider.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/VersioningProtectedResourceProvider.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.servlet/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceDAO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceDAO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceManager.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/TrashedResourceManager.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.resource/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/ContentVersion.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/ContentVersion.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/IVersioningManager.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/IVersioningManager.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningDAO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningDAO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningManager.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/VersioningManager.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps.******.services.versioning/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/VersioningConfigAction.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/VersioningConfigAction.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.config/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/ContentVersionsAction.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/ContentVersionsAction.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.content/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/TrashedResourceAction.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/TrashedResourceAction.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.resource/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionAction.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionAction.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionFinderAction.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/VersionFinderAction.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/com.agiletec.plugins.jpversioning.aps*****.versioning/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/branchfc.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/branchnc.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/branchpc.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/bundle.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/class.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/down.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/greenbar.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/group.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/method.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/package.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/prettify.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/prettify.js
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/redbar.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/report.css
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/report.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/session.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/sort.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/sort.js
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/source.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-resources/up.gif
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco-sessions.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco.csv
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/jacoco.xml
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/TrashedResource.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/TrashedResource.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/VersionedContent.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/VersionedContent.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.aps.******.init.portdb/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/VersioningConfigurationService.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/VersioningConfigurationService.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.configuration/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/ContentVersioningService.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/ContentVersioningService.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.content/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/ResourcesVersioningService.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/ResourcesVersioningService.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.services.resource/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/VersioningConfigurationController.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/VersioningConfigurationController.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/VersioningConfigurationDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/VersioningConfigurationDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.configuration.model/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/ContentVersioningController.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/ContentVersioningController.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/ContentVersionDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/ContentVersionDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.model/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/ContentVersioningValidator.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/ContentVersioningValidator.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/VersioningValidatorErrorCodes.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/VersioningValidatorErrorCodes.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.content.validator/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/ResourceVersioningController.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/ResourceVersioningController.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/FileResourceDTO$FileResourceDTOBuilder.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/FileResourceDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/FileResourceDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageResourceDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageResourceDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageVersionDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ImageVersionDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDownloadDTO.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/ResourceDownloadDTO.java.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/index.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/jacoco/org.entando.entando.plugins.jpversioning.web.resource.model/index.source.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/licenses.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/plugins.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/project-info.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/scm.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/summary.html
stashed: https://raw.githubusercontent.com/entando-k8s/devops-results/gh-pages/entando-plugin-jpversioning/PR-13/surefire-report.html
error: etcdserver: request is too large
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11  1866    0     0  100   219      0    366 --:--:-- --:--:-- --:--:--   366100  1866  100  1647  100   219   2753    366 --:--:-- --:--:-- --:--:--  2754
{
  "url": "https://api.github.com/repos/entando/entando-plugin-jpversioning/statuses/4b612982e2e6b2fe7a7ce316de63cf3b17841aaf",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 11602870031,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMTYwMjg3MDAzMQ==",
  "state": "success",
  "description": "Pre-deployment tests success!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-plugin-jpversioning/PR-13/surefire-report.html",
  "context": "Pre-deployment tests",
  "created_at": "2020-12-10T21:13:54Z",
  "updated_at": "2020-12-10T21:13:54Z",
  "creator": {
    "login": "**********",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/**********",
    "html_url": "https://github.com/**********",
    "followers_url": "https://api.github.com/users/**********/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/entando-**/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/**********/subscriptions",
    "organizations_url": "https://api.github.com/users/**********/orgs",
    "repos_url": "https://api.github.com/users/**********/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/**********/received_events",
    "type": "User",
    "site_*****": *****
  }
}
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 11  1838    0     0  100   205      0    247 --:--:-- --:--:-- --:--:--   246100  1838  100  1633  100   205   1967    247 --:--:-- --:--:-- --:--:--  1967
{
  "url": "https://api.github.com/repos/entando/entando-plugin-jpversioning/statuses/4b612982e2e6b2fe7a7ce316de63cf3b17841aaf",
  "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
  "id": 11602870169,
  "node_id": "MDEzOlN0YXR1c0NvbnRleHQxMTYwMjg3MDE2OQ==",
  "state": "success",
  "description": "OWASP CVE success!",
  "target_url": "https://entando-k8s.github.io/devops-results/entando-plugin-jpversioning/PR-13/dependency-check-report.html",
  "context": "OWASP CVE",
  "created_at": "2020-12-10T21:13:55Z",
  "updated_at": "2020-12-10T21:13:55Z",
  "creator": {
    "login": "**********",
    "id": 57885396,
    "node_id": "MDQ6VXNlcjU3ODg1Mzk2",
    "avatar_url": "https://avatars2.githubusercontent.com/u/57885396?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/**********",
    "html_url": "https://github.com/**********",
    "followers_url": "https://api.github.com/users/**********/followers",
    "following_url": "https://api.github.com/users/**********/following{/other_user}",
    "gists_url": "https://api.github.com/users/**********/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/**********/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/**********/subscriptions",
    "organizations_url": "https://api.github.com/users/**********/orgs",
    "repos_url": "https://api.github.com/users/**********/repos",
    "events_url": "https://api.github.com/users/**********/events{/privacy}",
    "received_events_url": "https://api.github.com/users/**********/received_events",
    "type": "User",
    "site_*****": *****
  }
}
Congratulations! No build failures found for entando-plugin-jpversioning-PR-13.
